{"version":3,"file":"js/app.2f8b905d.js","mappings":"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","sources":["webpack://glyph_experiment_new/./src/pages/userPage.vue","webpack://glyph_experiment_new/src/pages/userPage.vue","webpack://glyph_experiment_new/./src/pages/userPage.vue?eabd","webpack://glyph_experiment_new/./src/pages/userPage.vue?555c","webpack://glyph_experiment_new/./src/App.vue","webpack://glyph_experiment_new/src/App.vue","webpack://glyph_experiment_new/./src/App.vue?51dd","webpack://glyph_experiment_new/./src/App.vue?0e40","webpack://glyph_experiment_new/./src/router/index.js","webpack://glyph_experiment_new/./src/api/api.js","webpack://glyph_experiment_new/./src/api/index.js","webpack://glyph_experiment_new/./src/store/index.js","webpack://glyph_experiment_new/./src/main.js","webpack://glyph_experiment_new/./src/mixin.js","webpack://glyph_experiment_new/webpack/bootstrap","webpack://glyph_experiment_new/webpack/runtime/amd options","webpack://glyph_experiment_new/webpack/runtime/chunk loaded","webpack://glyph_experiment_new/webpack/runtime/compat get default export","webpack://glyph_experiment_new/webpack/runtime/define property getters","webpack://glyph_experiment_new/webpack/runtime/ensure chunk","webpack://glyph_experiment_new/webpack/runtime/get javascript chunk filename","webpack://glyph_experiment_new/webpack/runtime/get mini-css chunk filename","webpack://glyph_experiment_new/webpack/runtime/global","webpack://glyph_experiment_new/webpack/runtime/hasOwnProperty shorthand","webpack://glyph_experiment_new/webpack/runtime/load script","webpack://glyph_experiment_new/webpack/runtime/make namespace object","webpack://glyph_experiment_new/webpack/runtime/node module decorator","webpack://glyph_experiment_new/webpack/runtime/publicPath","webpack://glyph_experiment_new/webpack/runtime/css loading","webpack://glyph_experiment_new/webpack/runtime/jsonp chunk loading","webpack://glyph_experiment_new/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-container',[_c('el-header',[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h1',[_vm._v(\"欢迎参加本次实验\")])])],1)],1),_c('el-main',[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h4',{staticStyle:{\"color\":\"grey\"}},[_vm._v(\"请允许我们收集您的一些个人信息\")])])],1),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"left\",\"align\":\"middle\"}},[_c('el-col',{attrs:{\"span\":7,\"offset\":8}},[_c('el-form',{ref:\"formUser\",attrs:{\"label-position\":\"right\",\"label-width\":\"80px\",\"model\":_vm.userInfo}},[_c('el-form-item',{attrs:{\"label\":\"实验编号\"}},[_c('el-input',{attrs:{\"readonly\":\"\"},model:{value:(_vm.userInfo.sId),callback:function ($$v) {_vm.$set(_vm.userInfo, \"sId\", $$v)},expression:\"userInfo.sId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"姓名\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入您的姓名\",\"clearable\":\"\"},model:{value:(_vm.userInfo.name),callback:function ($$v) {_vm.$set(_vm.userInfo, \"name\", $$v)},expression:\"userInfo.name\"}})],1),_c('el-form-item',{staticClass:\"gender\",attrs:{\"label\":\"性别\"}},[_c('el-radio-group',{model:{value:(_vm.userInfo.gender),callback:function ($$v) {_vm.$set(_vm.userInfo, \"gender\", $$v)},expression:\"userInfo.gender\"}},[_c('el-radio',{attrs:{\"label\":\"男\"}}),_c('el-radio',{attrs:{\"label\":\"女\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"年龄\",\"prop\":\"age\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入您的年龄\",\"clearable\":\"\"},model:{value:(_vm.userInfo.age),callback:function ($$v) {_vm.$set(_vm.userInfo, \"age\", _vm._n($$v))},expression:\"userInfo.age\"}})],1),_c('el-form-item',[_c('el-button',{staticClass:\"begin-experiment\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.startExperiment}},[_vm._v(\"开始实验 \")])],1)],1)],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h3',{staticStyle:{\"color\":\"red\"}},[_vm._v(\" 请在屏幕1920x1080分辨率，100%缩放的环境下完成实验，实验过程中请勿缩放浏览器 \")])])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h1>欢迎参加本次实验</h1>\r\n          </el-col>\r\n        </el-row>\r\n      </el-header>\r\n      <el-main>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h4 style=\"color: grey\">请允许我们收集您的一些个人信息</h4>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row type=\"flex\" justify=\"left\" align=\"middle\">\r\n          <el-col :span=\"7\" :offset=\"8\">\r\n            <!--:model校验的时候要保证该字段与信息对象变量名一致-->\r\n            <el-form label-position=\"right\" ref=\"formUser\" label-width=\"80px\" :model=\"userInfo\">\r\n              <el-form-item label=\"实验编号\">\r\n                <el-input v-model=\"userInfo.sId\" readonly></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"姓名\" prop=\"name\">\r\n                <el-input v-model=\"userInfo.name\" placeholder=\"请输入您的姓名\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"性别\" class=\"gender\">\r\n                <el-radio-group v-model=\"userInfo.gender\">\r\n                  <el-radio label=\"男\"></el-radio>\r\n                  <el-radio label=\"女\"></el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n              <el-form-item label=\"年龄\" prop=\"age\">\r\n                <el-input v-model.number=\"userInfo.age\" placeholder=\"请输入您的年龄\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"startExperiment\" class=\"begin-experiment\">开始实验\r\n                </el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h3 style=\"color: red\">\r\n              请在屏幕1920x1080分辨率，100%缩放的环境下完成实验，实验过程中请勿缩放浏览器\r\n            </h3>\r\n          </el-col>\r\n        </el-row>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {publicFun} from \"@/mixin\";\r\n\r\nexport default {\r\n  name: \"userPage\",\r\n  mixins: [publicFun],\r\n  data() {\r\n    return {\r\n      userInfo: {\r\n        sId: '',\r\n        gender: '男',\r\n        name: '',\r\n        age: 23\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 自动生成唯一编号\r\n    this.$set(this.userInfo, 'sId', this.getId())\r\n  },\r\n  methods: {\r\n    startExperiment() {\r\n      // 将用户相关信息存在vuex中\r\n      this.$store.dispatch('storeUserInfo', this.userInfo)\r\n      this.$router.push({\r\n        name: 'mainPage'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.el-container {\r\n  text-align: center;\r\n\r\n  .gender {\r\n    text-align: left;\r\n  }\r\n\r\n  .begin-experiment {\r\n    width: 100%;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n}\r\n\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userPage.vue?vue&type=template&id=51ecba27&scoped=true&\"\nimport script from \"./userPage.vue?vue&type=script&lang=js&\"\nexport * from \"./userPage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./userPage.vue?vue&type=style&index=0&id=51ecba27&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"51ecba27\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport userPage from \"@/pages/userPage.vue\";\n\nexport default {\n  name: 'App',\n  components: {\n    userPage\n  },\n  beforeCreate() {\n    // 加载ssi数据\n    this.$store.dispatch('loadSSIData')\n  },\n  created() {\n\n  }\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3c45bb53&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\n\r\n// 路由懒加载\r\nconst userPage = () => import('@/pages/userPage.vue')\r\nconst mainPage = () => import('@/pages/mainPage.vue')\r\nVue.use(VueRouter)\r\nexport default new VueRouter({\r\n    // base: '/glyph_experiment_new/',\r\n    routes: [\r\n        // 当路径为/时重定向到用户信息界面\r\n        {\r\n            path: '/',\r\n            redirect: '/user'\r\n            // redirect: '/main-page'\r\n        },\r\n        {\r\n            name: 'user',\r\n            path: '/user',\r\n            component: userPage\r\n        },\r\n        {\r\n            name: 'mainPage',\r\n            path: '/main-page',\r\n            component: mainPage\r\n        }\r\n    ]\r\n})","// axios的二次封装\r\nimport axios from \"axios\";\r\n\r\n// 创建一个axios实例\r\nconst api = axios.create({\r\n    // 请求地址中公共部分\r\n    // baseURL: 'http://localhost:8080/',\r\n    baseURL: process.env.NODE_ENV === \"production\"\r\n        ? \"https://leisir-note-image.oss-cn-hangzhou.aliyuncs.com/\"\r\n        : \"http://localhost:8080/\",\r\n    // 请求超时时间\r\n    timeout: 5000,\r\n    // 是否可以带凭证，比如cookie或session\r\n    withCredentials: false,\r\n    headers: {'Cache-Control': 'no-cache', \"Content-type\": \"application/json\", 'Access-Control-Allow-Origin': '*'}\r\n})\r\n\r\n/**\r\n * 设置请求拦截器，在发请求之前可以进行一些处理\r\n */\r\napi.interceptors.request.use(config => {\r\n    return config\r\n}, err => {\r\n    // 请求失败\r\n    return Promise.reject(err)\r\n})\r\n/**\r\n * 响应拦截器\r\n */\r\napi.interceptors.response.use(res => {\r\n        return res.data\r\n    }, err => {\r\n        return Promise.reject(err)\r\n    }\r\n)\r\n\r\nexport default api\r\n","import api from \"@/api/api\";\r\n\r\n/**\r\n * 判断分布的实验数据\r\n * @param isPractice    是否是练习数据\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSIDistributionDataList(isPractice) {\r\n    let url = 'distrubution.json'\r\n    if (isPractice) {\r\n        url = 'distrubution_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n/**\r\n * 获取微小差异判断数据\r\n * @param isPractice    是否是练习数据\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSISmallDifferDataList(isPractice) {\r\n    let url = 'small_differ.json'\r\n    if (isPractice) {\r\n        url = 'small_differ_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n/**\r\n * 获取差值实验数据\r\n * @param isPractice\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSIAccuracyDifferDataList(isPractice) {\r\n    let url = 'acc_differ.json'\r\n    if (isPractice) {\r\n        url = 'acc_differ_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}","import Vue from \"vue\";\r\nimport Vuex from 'vuex'\r\nimport {getSSIAccuracyDifferDataList, getSSIDistributionDataList, getSSISmallDifferDataList} from \"@/api\";\r\n\r\nVue.use(Vuex)\r\nconst actions = {\r\n    /**\r\n     * 存储用户信息\r\n     * @param context   store上下文\r\n     * @param data  提交的数据\r\n     */\r\n    storeUserInfo(context, data) {\r\n        const userInfo = {\r\n            ...data\r\n        }\r\n        context.commit('StoreUserInfo', userInfo)\r\n    },\r\n    // 发送请求加载ssi数据\r\n    loadSSIData(context) {\r\n        // 分片请求数据\r\n        let requestDataPromise = [\r\n            [getSSIDistributionDataList(true), getSSIDistributionDataList(false)],\r\n            [getSSISmallDifferDataList(true), getSSISmallDifferDataList(false)],\r\n            [getSSIAccuracyDifferDataList(true), getSSIAccuracyDifferDataList(false)]\r\n        ]\r\n        let experimentData = {}\r\n        Promise.all(requestDataPromise[0]).then(res => {\r\n            experimentData['DistributionPractice'] = res[0]\r\n            experimentData['Distribution'] = res[1]\r\n            return Promise.all(requestDataPromise[1])\r\n        }, err => {\r\n            console.log(`分布数据请求失败${err.message}`)\r\n        }).then(res => {\r\n            experimentData['SmallDifferPractice'] = res[0]\r\n            experimentData['SmallDiffer'] = res[1]\r\n            return Promise.all(requestDataPromise[2])\r\n        }, err => {\r\n            console.log(`微小差异数据请求失败${err.message}`)\r\n        }).then(res => {\r\n            experimentData['AccuracyDifferPractice'] = res[0]\r\n            experimentData['AccuracyDiffer'] = res[1]\r\n        }, err => {\r\n            console.log(`差值实验数据请求失败${err.message}`)\r\n        }).finally(() => {\r\n            // 提交给mutations存储数据\r\n            context.commit('LoadSSIData', experimentData)\r\n        })\r\n    }\r\n}\r\nconst mutations = {\r\n    StoreUserInfo(state, data) {\r\n        state.userInfo = data\r\n    },\r\n    LoadSSIData(state, data) {\r\n        // 将data中的数据全都拷贝给state（合并操作）\r\n        Object.assign(state, data)\r\n        console.log(state)\r\n    }\r\n}\r\nconst state = {\r\n    userInfo: {},\r\n    ssiColorEncoding: [\r\n        {\r\n            id: 0,\r\n            name: 'food',\r\n            color: \"#e41a1c\",\r\n            nameCh: '营养不良指数'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'water',\r\n            color: \"#377eb8\",\r\n            nameCh: '基础供水服务指数'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'safe',\r\n            color: \"#bf66eb\",\r\n            nameCh: '基础卫生服务指数'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'education',\r\n            color: \"#4daf4a\",\r\n            nameCh: '教育指数'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'life',\r\n            color: \"#984ea3\",\r\n            nameCh: '健康生活指数'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'gender',\r\n            color: \"#ff7f00\",\r\n            nameCh: '性别平等指数'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'income',\r\n            color: \"#fdbf6f\",\r\n            nameCh: '收入分配指数'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'population',\r\n            color: \"#a65628\",\r\n            nameCh: '人口增长指数'\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'governance',\r\n            color: \"#f781bf\",\r\n            nameCh: '政府治理水平指数'\r\n        }\r\n    ],\r\n    // 可视化介绍部分展示的数据\r\n    GlyphDesignData: {\r\n        \"index\": \"39f41a8d-b7e6-11ed-9002-c403a826ff34\",\r\n        \"originIndex\": \"39eeeac7-b7e6-11ed-a078-c403a826ff34\",\r\n        \"city\": \"Austria\",\r\n        \"average\": 7.233509167974615,\r\n        \"var\": 0.7078247404108701,\r\n        \"std\": 0.8413232080543541,\r\n        \"data\": [\r\n            {\r\n                \"name\": \"food\",\r\n                \"value\": 7.911105549650376\r\n            },\r\n            {\r\n                \"name\": \"water\",\r\n                \"value\": 7.87415577490147\r\n            },\r\n            {\r\n                \"name\": \"safe\",\r\n                \"value\": 7.829557502924567\r\n            },\r\n            {\r\n                \"name\": \"education\",\r\n                \"value\": 7.722513530595052\r\n            },\r\n            {\r\n                \"name\": \"life\",\r\n                \"value\": 7.517247857453378\r\n            },\r\n            {\r\n                \"name\": \"gender\",\r\n                \"value\": 6.129385773669878\r\n            },\r\n            {\r\n                \"name\": \"income\",\r\n                \"value\": 6.843201585267538\r\n            },\r\n            {\r\n                \"name\": \"population\",\r\n                \"value\": 5.466017626675156\r\n            },\r\n            {\r\n                \"name\": \"governance\",\r\n                \"value\": 7.808397310634129\r\n            }\r\n        ]\r\n    }\r\n}\r\nconst store = new Vuex.Store({\r\n    actions,\r\n    mutations,\r\n    state\r\n})\r\nexport default store","import Vue from 'vue'\nimport App from './App.vue'\nimport router from '@/router'\nimport store from '@/store'\nimport {\n    Button,\n    Form,\n    FormItem,\n    Tabs,\n    TabPane,\n    Container,\n    Main,\n    Header,\n    Footer,\n    Col,\n    Row,\n    Input,\n    Radio,\n    RadioGroup,\n    Statistic,\n    ButtonGroup,\n    RadioButton,\n    Notification,\n    MessageBox,\n    Message,\n    InputNumber\n} from \"element-ui\";\n\nVue.config.productionTip = false\nVue.use(Button)\nVue.use(Form)\nVue.use(FormItem)\nVue.use(Container)\nVue.use(Main)\nVue.use(Header)\nVue.use(Footer)\nVue.use(Col)\nVue.use(Row)\nVue.use(Input)\nVue.use(Radio)\nVue.use(RadioGroup)\nVue.use(Tabs)\nVue.use(TabPane)\nVue.use(Statistic)\nVue.use(ButtonGroup)\nVue.use(RadioButton)\nVue.use(InputNumber)\nnew Vue({\n    render: h => h(App),\n    router,\n    store,\n    beforeCreate() {\n        Vue.prototype.$bus = this\n        Vue.prototype.$notify = Notification\n        Vue.prototype.$confirm = MessageBox.confirm\n        Vue.prototype.$message = Message\n\n    }\n}).$mount('#app')\n","import {nanoid} from \"nanoid\";\r\nimport * as d3 from \"d3\";\r\nimport dayjs from \"dayjs\";\r\nimport {saveAs} from 'file-saver'\r\n\r\nexport const publicFun = {\r\n    data() {\r\n        return {\r\n            storageName: 'userInfo'\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * 生成一个唯一的id\r\n         * @return {string} 生成的id\r\n         */\r\n        getId() {\r\n            return nanoid()\r\n        },\r\n        /**\r\n         * 根据给定的数组长度随机选择一个索引\r\n         * @param length    数组的长度\r\n         * @return {number} 随机生成的索引\r\n         */\r\n        randomIndex(length) {\r\n            return Math.floor(Math.random() * length)\r\n        },\r\n        // 获取当前时间\r\n        getCurrentTime() {\r\n            let date = dayjs();\r\n            let format = 'YYYY-MM-DD HH:mm:ss.SSS';\r\n            return date.format(format);\r\n        },\r\n        // 根据type获取实验名称\r\n        curExperiment(type) {\r\n            if (type === 1) {\r\n                return 'Distribution'\r\n            } else if (type === 2) {\r\n                return 'SmallDiffer'\r\n            } else {\r\n                return 'AccuracyDiffer'\r\n            }\r\n        },\r\n        // 数据导出\r\n        saveAsJson(data, experiment, success) {\r\n            // 标明实验\r\n            const e = this.curExperiment(experiment);\r\n            let name = 'noName';\r\n            const userInfo = this.$store.state.userInfo\r\n            if (userInfo) {\r\n                name = userInfo.name;\r\n                const result = {\r\n                    userInfo,\r\n                    [e]: data\r\n                }\r\n                const prefix = userInfo.sId;\r\n                let blob = new Blob([JSON.stringify(result)], {type: \"application/json\"});\r\n                let fileName = prefix + \"_\" + e + \"_\" + name + \".json\";\r\n                saveAs(blob, fileName);\r\n                success();\r\n            }\r\n        },\r\n        /**\r\n         * 获取数据中某个属性的值\r\n         * @param data  一条数据\r\n         * @param attr  属性名\r\n         * @return {*}  属性值\r\n         */\r\n        getDataAttrNum(data, attr) {\r\n            const d = data.data\r\n            const a = d.filter(item => {\r\n                return item.name === attr\r\n            })\r\n            return a[0].value\r\n        }\r\n    }\r\n}\r\n\r\nexport const toolsFun = {\r\n    methods: {\r\n        /**\r\n         * 角度转为弧度\r\n         * @param angle 角度\r\n         * @returns {number}弧度\r\n         */\r\n        angle_radian(angle) {\r\n            return angle * Math.PI / 180;\r\n        },\r\n        /**\r\n         * 基于弧长计算弧度\r\n         * @param arc       弧长\r\n         * @param radius    半径\r\n         * @returns {number}角度\r\n         */\r\n        cal_angle(arc, radius) {\r\n            return (arc / radius);\r\n        },\r\n        /**\r\n         * 计算弧长\r\n         * @param radian        弧度\r\n         * @param radius        半径\r\n         * @param proportion    比例\r\n         * @returns {number}    弧长\r\n         */\r\n        cal_arc(radian, radius, proportion = 1) {\r\n            return (radian * radius * proportion)\r\n        },\r\n        /**\r\n         * 半径比例尺\r\n         * @param radius        半径值0-10\r\n         * @param maxRadius     最大半径\r\n         * @param svgSize       svg尺寸\r\n         * @returns {*}\r\n         */\r\n        radius_scale(radius, maxRadius, svgSize) {\r\n            const r_s = d3.scaleLinear()\r\n                .domain([0, maxRadius])\r\n                .range([0, svgSize / 2]);\r\n            return r_s(radius);\r\n        },\r\n        /**\r\n         * 获取一个扇形区域所能容纳的所有条纹\r\n         * @param meta_data         扇形区域相关信息\r\n         * @param interval_space    左右间隔比例，0.5表示间隔和条纹大小一致\r\n         * @param former_space      前后间距 0-1 表示占环形区域的比例\r\n         * @param proportion        条纹长度比例，最大弧长的比例\r\n         * @param layer_num         层数\r\n         * @returns {*[]}           所有条纹的数据\r\n         */\r\n        cal_total_strip(meta_data, interval_space, former_space, proportion, layer_num) {\r\n            let strip_info = [];\r\n            const radius_scale = d3.scaleLinear()\r\n                .domain([0, 1])\r\n                .range([0, meta_data.outer - meta_data.inner]);\r\n            // 每一层条纹的宽度\r\n            const strip_thickness = (meta_data.outer - meta_data.inner - radius_scale(former_space) * (layer_num - 1)) / layer_num;\r\n            // 最大弧长\r\n            const max_arc = this.cal_arc(meta_data.end - meta_data.start, meta_data.outer);\r\n            // 最小弧长\r\n            const min_arc = this.cal_arc(meta_data.end - meta_data.start, meta_data.inner);\r\n            // 最大的比例\r\n            const max_proportion = min_arc / max_arc;\r\n            const real_proportion = Math.min(proportion, max_proportion);\r\n            // 指定弧长长度\r\n            const special_arc = real_proportion * max_arc;\r\n            for (let i = 0; i < layer_num; i++) {\r\n                // 条纹中心半径\r\n                let radius = meta_data.inner + strip_thickness / 2 + (strip_thickness + radius_scale(former_space)) * i;\r\n                // 指定弧长和半径下的圆心角弧度\r\n                let radian = this.cal_angle(special_arc, radius);\r\n                // 可容纳数量 一个条纹包括一个显示的条纹和一个不显示的\r\n                let num = Math.floor((meta_data.end - meta_data.start) / (radian * 2))\r\n                let remain = (meta_data.end - meta_data.start) - num * radian * 2;\r\n                // 当interval_space=0.5时显示和不显示条纹的大小一样\r\n                let left_space_radian = radian * 2 * interval_space;\r\n                let real_radian = radian * 2 - left_space_radian;\r\n                let real_start = meta_data.start + remain / 2 + left_space_radian / 2;\r\n                // 判断剩下的区域能否容纳一个条纹\r\n                if (remain >= real_radian) {\r\n                    remain = remain - real_radian;\r\n                    num++;\r\n                    real_start = meta_data.start + remain / 2;\r\n                }\r\n                for (let j = 0; j < num; j++) {\r\n                    let strip = {\r\n                        layer: i,\r\n                        index: j,\r\n                        inner_r: radius - strip_thickness / 2,\r\n                        outer_r: radius + strip_thickness / 2,\r\n                        start: real_start + j * radian * 2,\r\n                        end: real_start + j * radian * 2 + real_radian\r\n                    }\r\n                    strip_info.push(strip);\r\n                }\r\n            }\r\n            return strip_info;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 绘制glyph的方法\r\n * @type {{methods: {}}}\r\n */\r\nexport const drawGlyph = {\r\n    data() {\r\n        return {\r\n            peaGlyphCondition: {\r\n                glyphSize: 600,\r\n                outlineThickness: 0.7,\r\n                outlineOffset: 1,\r\n                circleNum: 10,\r\n                outlineDis: 0.5,\r\n                centerOffset: 12,\r\n                thickness: 0.5,\r\n                circleValue: 1\r\n            },\r\n            stripeGlyphCondition: {\r\n                glyphSize: 600,\r\n                iRadius: 2.5,\r\n                maxRadius: 10,\r\n                sectorInterval: 3,\r\n                svgEdgeDis: 0.1,\r\n                outlineThickness: 0.7,\r\n                divisionColor: 'black',\r\n                divisionOpacity: 1,\r\n                bgOpacity: 0,\r\n                innerOpacity: 1,\r\n                stripe_L_R: .1,\r\n                stripe_B_A: .02,\r\n                stripeProportion: .072,\r\n                layerNum: 10,\r\n                metaphorColor: '#C0C0C0',\r\n                metaphorOpacity: .3,\r\n                // 这个值现在传递的是编码的条纹的数量\r\n                stripeNum: 40,\r\n                isEncodingInfo: true,\r\n                encodingInfoColor: 'red',\r\n                stripeOpacity: 1,\r\n                stripeValue: 0.25\r\n            }\r\n        }\r\n    },\r\n    mixins: [toolsFun],\r\n    computed: {\r\n        // 编码的颜色\r\n        encodingColor() {\r\n            if (this.experimentInfo.isExperimentB) {\r\n                return this.$store.state.ssiColorEncoding\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * 为glyph创建一个边框\r\n         * @param glyphSvg  要附加到的svg\r\n         * @param id    边框的id\r\n         * @param size  边框的尺寸\r\n         * @param position  边框的位置\r\n         * @returns {*} 绘制的边框\r\n         */\r\n        createSvgOutline(glyphSvg, id, size, position) {\r\n            let thickness = 1\r\n            let width = size - thickness / 2\r\n            let height = size - thickness / 2\r\n            let rectComponent = glyphSvg.append('g')\r\n                .attr('class', id + \"_\" + 'svg_outline')\r\n            let rects = rectComponent.append('rect')\r\n                .attr('x', position[0] - width / 2)\r\n                .attr('y', position[1] - height / 2)\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .attr('fill', 'transparent')\r\n                .attr('stroke', 'black')\r\n                .attr('stroke-width', thickness)\r\n                .attr('stroke-opacity', 0)\r\n            return rectComponent\r\n        },\r\n        /**\r\n         * 创建分界线\r\n         * @param svgs          要附加的svg\r\n         * @param id            该svg的唯一id\r\n         * @param condition     控制条件{metaData,division_color,division_opacity,a_sector,sector_interval}\r\n         * @param position      位置信息\r\n         */\r\n        createDivision(svgs, id, condition, position) {\r\n            const uniformId = id + \"_\" + \"glyph_division\";\r\n            const glyphDivision = svgs.append(\"g\")\r\n                .attr(\"class\", uniformId)\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                });\r\n            const division = glyphDivision.selectAll(\"line\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"line\")\r\n                .attr(\"x1\", 0)\r\n                .attr(\"y1\", -condition.metaData.inner)\r\n                .attr(\"x2\", 0)\r\n                .attr(\"y2\", -condition.metaData.outer)\r\n                .attr(\"stroke\", condition.division_color)\r\n                .attr(\"stroke-width\", condition.divisionThickness)\r\n                .attr(\"stroke-opacity\", condition.division_opacity)\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + (-(condition.a_sector) / 2 + i * (condition.a_sector + condition.sector_interval)) + \")\";\r\n                });\r\n            return glyphDivision;\r\n        },\r\n\r\n        /**\r\n         * 创建背景\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一的id\r\n         * @param condition     控制条件{metaData,encodingColor,bgOpacity,aSector,sectorInterval}\r\n         * @param position      位置\r\n         */\r\n        createBackground(svgs, id, condition, position) {\r\n            const vc = this\r\n            let uniformId = id + \"_\" + \"glyph_bg\"\r\n            if (condition.isEvent) {\r\n                uniformId += '_event'\r\n            }\r\n            const glyphBg = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_bg\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\"\r\n                });\r\n            const bg_sector = glyphBg.selectAll(\"path\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    let addAngle = vc.angle_radian(i * (condition.aSector + condition.sectorInterval));\r\n                    // 创建圆环\r\n                    let arc = d3.arc()\r\n                        .innerRadius(condition.metaData.inner)\r\n                        .outerRadius(condition.metaData.outer)\r\n                        .startAngle(condition.metaData.start + addAngle)\r\n                        .endAngle(condition.metaData.end + addAngle);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function (d) {\r\n                    // 筛选出来指定属性的颜色\r\n                    let c = condition.encodingColor.filter((item, index) => {\r\n                        return item.name === d.name.split(' ').join('_');\r\n                    });\r\n                    return c[0].color;\r\n                })\r\n                .attr(\"fill-opacity\", condition.bgOpacity);\r\n            if (condition.isEvent) {\r\n                return bg_sector;\r\n            } else {\r\n                return glyphBg;\r\n            }\r\n        },\r\n        /**\r\n         * 绘制轮廓线\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一id\r\n         * @param condition     控制条件{name,radius,color,thickness,opacity}\r\n         * @param position\r\n         * @returns {*}\r\n         */\r\n        drawOutline(svgs, id, condition, position) {\r\n            return svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + condition.name)\r\n                .append(\"circle\")\r\n                .attr(\"cx\", position[0])\r\n                .attr(\"cy\", position[1])\r\n                .attr(\"r\", condition.radius)\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"fill-opacity\", 0)\r\n                .attr(\"stroke\", condition.color)\r\n                .attr(\"stroke-width\", condition.thickness)\r\n                .attr(\"stroke-opacity\", condition.opacity);\r\n        },\r\n        /**\r\n         *\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector,sectorInterval,sectorTotalStripe,metaphorColor,metaphorOpacity}\r\n         * @param position\r\n         */\r\n        createMetaphor(svgs, id, condition, position) {\r\n            const glyphMetaphor = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_metaphor\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data((d) => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"metaphor\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n            const glyph_metaphor_stripe = glyphMetaphor.selectAll(\"path\")\r\n                .data(condition.sectorTotalStripe)\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d) {\r\n                    let arc = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start)\r\n                        .endAngle(d.end);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    return condition.metaphorColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.metaphorOpacity);\r\n            return glyphMetaphor;\r\n        },\r\n        /**\r\n         *\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector, sectorInterval, stripeNum, sectorTotalStripe, color, isEncodingInfo, encodingInfoColor,stripeOpacity,experimentInfo,circleValue}\r\n         * @param position\r\n         */\r\n        createContent(svgs, id, condition, position) {\r\n            const glyphContent = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_content\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"content\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n            const glyph_content_stripe = glyphContent.selectAll(\"path\")\r\n                .data(function (d) {\r\n                    // encodingValue现在编码的是条纹的数量\r\n                    let aValue = 1\r\n                    if (condition.experimentInfo.isExperimentB) {\r\n                        aValue = condition.circleValue\r\n                    } else {\r\n                        aValue = d[this.getValueBaseStripeNum(condition.stripeNum)]\r\n                    }\r\n                    let num = Math.ceil(d.value / aValue);\r\n                    // console.log(d.name, d.value, d[aValue], num);\r\n                    return condition.sectorTotalStripe.slice(0, num);\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    const ve = d3.select(this.parentNode).data()[0];\r\n                    let aValue = 1\r\n                    if (condition.experimentInfo.isExperimentB) {\r\n                        aValue = condition.circleValue\r\n                    } else {\r\n                        aValue = ve[this.getValueBaseStripeNum(condition.stripeNum)]\r\n                    }\r\n                    const num = Math.floor(ve.value / aValue);\r\n                    const arcs = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start);\r\n                    if (i === num) {\r\n                        let remain = ve.value - num * aValue;\r\n                        let radian_scale = d3.scaleLinear()\r\n                            .domain([0, aValue])\r\n                            .range([d.start, d.end]);\r\n                        arcs.endAngle(radian_scale(remain));\r\n                    } else {\r\n                        arcs.endAngle(d.end);\r\n                    }\r\n                    return arcs();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    let tmp_data = d3.select(this.parentNode).data()[0];\r\n                    // 筛选出来指定属性的颜色\r\n                    let c = condition.color.filter((item, index) => {\r\n                        return item.name === tmp_data.name;\r\n                    });\r\n                    return condition.isEncodingInfo ? c[0].color : condition.encodingInfoColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.stripeOpacity);\r\n            return glyphContent;\r\n        },\r\n        /**\r\n         * 根据当前条纹数量来判断每个stripe编码值的大小\r\n         * @param stripeNum\r\n         * @returns {string}\r\n         */\r\n        getValueBaseStripeNum(stripeNum) {\r\n            let attr = 'value_';\r\n            switch (stripeNum) {\r\n                case 10:\r\n                    attr += 10;\r\n                    break;\r\n                case 20:\r\n                    attr += 20;\r\n                    break;\r\n                case 30:\r\n                    attr += 30;\r\n                    break;\r\n                case 40:\r\n                    attr += 40;\r\n                    break;\r\n            }\r\n            return attr;\r\n        },\r\n        /**\r\n         * 绘制peaglyph\r\n         * @param svgs  要附加到的svg\r\n         * @param condition 控制glyph的一些条件{\r\n         *     glyphSize:glyphSize的尺寸\r\n         *     outlineOffset:边框的的偏移\r\n         *     outlineDis:轮廓距离svg边缘的距离\r\n         *     centerOffset:glyph中心的偏移量\r\n         * }\r\n         * @param data\r\n         * @param experimentInfo{\r\n         *     isExperimentB:true or false\r\n         * }\r\n         * @param colorEncoding 颜色编码策略\r\n         * @param glyphClickCallback    回调函数\r\n         * @return {*}  创建的glyph\r\n         */\r\n        drawPeaGlyph(svgs, condition, data, experimentInfo, colorEncoding, glyphClickCallback) {\r\n            const vc = this\r\n            // glyph的位置设置\r\n            const position = [condition.glyphSize / 2, condition.glyphSize / 2]\r\n            const uniformId = 'peaGlyph' + '-' + nanoid();\r\n            let peaAngle = []\r\n            if (experimentInfo.isExperimentB) {\r\n                peaAngle = [70, 50]\r\n            } else {\r\n                peaAngle = [60, 30]\r\n            }\r\n            const radius = (condition.glyphSize / 2 - condition.outlineOffset - condition.outlineDis - condition.centerOffset) / ((condition.circleNum + 1) * 2) - condition.thickness / 2;\r\n            // 这就是一整个glyph\r\n            let peaGlyph = svgs.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(data);\r\n\r\n            // 创建豌豆荚\r\n            let peasecod = peaGlyph.append('g')\r\n                .attr('class', uniformId + \"_\" + 'peasecod')\r\n            let allPeasecodRight = peasecod.append('g')\r\n                .attr('class', uniformId + \"_\" + 'right')\r\n                .datum(d => {\r\n                    return d;\r\n                })\r\n            let allPeasecodLeft = peasecod.append('g')\r\n                .attr('class', uniformId + \"_\" + 'left')\r\n                .datum(d => {\r\n                    return d;\r\n                })\r\n            let peaArcLeft = allPeasecodLeft.selectAll('path')\r\n                .data((d) => {\r\n                    return d.data;\r\n                })\r\n                .join('path')\r\n                .attr('d', () => {\r\n                    let angle = peaAngle[0];\r\n                    let newPath = d3.path();\r\n                    let startAngle = 180 - angle / 2;\r\n                    let endAngle = startAngle + angle;\r\n                    let arcRadius = condition.glyphSize / 4 / Math.sin(vc.angle_radian(angle / 2));\r\n                    let x = position[0] + Math.cos(vc.angle_radian(angle / 2)) * arcRadius;\r\n                    let y = position[1] - condition.glyphSize / 4;\r\n                    newPath.arc(x, y, arcRadius, vc.angle_radian(startAngle), vc.angle_radian(endAngle), false)\r\n                    return newPath;\r\n                })\r\n                .attr('fill', '#25a924')\r\n                .attr('fill-opacity', .2)\r\n                .attr('transform', function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let singleAngle = (360 / attr_num) * i;\r\n                    return 'rotate(' + singleAngle + \",\" + position[0] + \",\" + position[1] + \")\";\r\n                });\r\n            let peaArcRight = allPeasecodRight.selectAll('path')\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join('path')\r\n                .attr('d', function (d, i) {\r\n                    let angle = peaAngle[1]\r\n                    let newPath = d3.path();\r\n                    let startAngle = 0 - angle / 2;\r\n                    let endAngle = startAngle + angle;\r\n                    let arcRadius = condition.glyphSize / 4 / Math.sin(vc.angle_radian(angle / 2));\r\n                    let x = position[0] - Math.cos(vc.angle_radian(angle / 2)) * arcRadius;\r\n                    let y = position[1] - condition.glyphSize / 4;\r\n                    newPath.arc(x, y, arcRadius, vc.angle_radian(startAngle), vc.angle_radian(endAngle), false)\r\n                    return newPath;\r\n                })\r\n                .attr('fill', '#25a924')\r\n                .attr('fill-opacity', .2)\r\n                .attr('transform', function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let singleAngle = (360 / attr_num) * i;\r\n                    return 'rotate(' + singleAngle + \",\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n\r\n            // 创建外轮廓\r\n            let out_line = peaGlyph.append(\"g\")\r\n                .attr(\"class\", uniformId + 'outline')\r\n                .append(\"circle\")\r\n                .attr(\"cx\", position[0])\r\n                .attr(\"cy\", position[1])\r\n                .attr(\"r\", condition.glyphSize / 2 - condition.outlineOffset)\r\n                .attr(\"fill\", \"red\")\r\n                .attr(\"fill-opacity\", 0)\r\n                .attr(\"stroke\", \"black\")\r\n                .attr('stroke-opacity', .7)\r\n                .attr(\"stroke-width\", condition.outlineThickness);\r\n\r\n            // 只有第二个实验才需要中心点\r\n            // let center = peaGlyph.append(\"g\")\r\n            //     .attr(\"class\", uniformId + 'center')\r\n            //     .append(\"circle\")\r\n            //     .attr(\"cx\", position[0])\r\n            //     .attr(\"cy\", position[1])\r\n            //     .attr(\"r\", 2)\r\n            //     .attr(\"fill\", \"black\")\r\n            //     .attr(\"fill-opacity\", 1);\r\n\r\n            // 绘制glyph的主体内容\r\n            let glyph_content = peaGlyph.append(\"g\")\r\n                .attr(\"class\", uniformId + \"_\" + \"glyph_content\");\r\n\r\n            // 创建每个属性\r\n            let glyph_attr = glyph_content.selectAll(\"g\")\r\n                .data(function (d) {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d, i) {\r\n                    // 类名为属性名之间的空格换为下划线\r\n                    return uniformId + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let angle = 360 / attr_num;\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \") rotate(\" + angle * i + \")\";\r\n                });\r\n\r\n            let glyph_circles = glyph_attr.selectAll(\"g\")\r\n                .data(function (d) {\r\n                    // 获取指定数量小球对应的每个小球应该编码的值的大小\r\n                    let circleValue = 0\r\n                    let values = [];\r\n                    if (experimentInfo.isExperimentB) {\r\n                        circleValue = condition.circleValue\r\n                    } else {\r\n                        let attr = vc.getValueBaseStripeNum(condition.circleNum);\r\n                        circleValue = d[attr]\r\n                    }\r\n                    // 属性值小于0表示没有这个属性\r\n                    if (d.value >= 0) {\r\n                        if (d.value >= circleValue) {\r\n                            let total = Math.floor(d.value / circleValue);\r\n                            let remain = d.value - total * circleValue;\r\n                            for (let i = 0; i < condition.circleNum; i++) {\r\n                                if (i < total) {\r\n                                    values.push(circleValue);\r\n                                } else if (i === total) {\r\n                                    values.push(remain);\r\n                                } else {\r\n                                    values.push(0);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            values.push(d.value);\r\n                            for (let i = 1; i < condition.circleNum; i++) {\r\n                                values.push(0);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < condition.circleNum; i++) {\r\n                            values.push(-1);\r\n                        }\r\n                    }\r\n                    return values;\r\n                })\r\n                .join(\"g\");\r\n\r\n            // 创建真实显现的circle\r\n            let glyph_real_circle = glyph_circles.append(\"circle\")\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i);\r\n                })\r\n                .attr(\"r\", radius)\r\n                .attr(\"fill\", function (d) {\r\n                    let attr = d3.select(this.parentNode.parentNode).data()[0].name;\r\n                    let v = colorEncoding.filter((item, index) => {\r\n                        return item.name === attr;\r\n                    });\r\n                    return v[0].color;\r\n                })\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"stroke-width\", condition.thickness)\r\n                .style(\"display\", function (d) {\r\n                    // 如果数据为null则不显示这个属性\r\n                    if (d < 0) {\r\n                        return \"none\";\r\n                    }\r\n                    return \"inline\";\r\n                });\r\n\r\n            // 创建遮盖矩形\r\n            let glyph_rect = glyph_circles.append(\"defs\")\r\n                .append(\"clipPath\")\r\n                .attr(\"id\", function (d, i) {\r\n                    let country = d3.select(this.parentNode.parentNode.parentNode.parentNode).data()[0].index;\r\n                    let attr = d3.select(this.parentNode.parentNode.parentNode).data()[0].name;\r\n                    // 使用nanoid生成唯一的id来保证数据相同时，id不同从而保证clip_path不会被互相覆盖\r\n                    return attr + \"_\" + country + \"_\" + i + '_' + nanoid();\r\n                })\r\n                .append(\"rect\")\r\n                .attr(\"x\", -radius + condition.thickness / 2)\r\n                .attr(\"y\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i - radius + condition.thickness / 2);\r\n                    // return 0;\r\n                })\r\n                .attr(\"width\", radius * 2 - condition.thickness)\r\n                .attr(\"height\", function (d) {\r\n                    let aCircleValue = 0\r\n                    // console.log(aCircleValue)\r\n                    if (experimentInfo.isExperimentB) {\r\n                        aCircleValue = condition.circleValue\r\n                    } else {\r\n                        let curData = d3.select(this.parentNode.parentNode.parentNode.parentNode).data()[0]\r\n                        aCircleValue = curData[vc.getValueBaseStripeNum(condition.circleNum)]\r\n                    }\r\n                    let height = radius * 2 - condition.thickness;\r\n                    let height_scale = d3.scaleLinear()\r\n                        .domain([0, aCircleValue])\r\n                        .range([height, 0]);\r\n                    if (d < 0) {\r\n                        return 0;\r\n                    } else {\r\n                        return height_scale(d);\r\n                    }\r\n                });\r\n            let mask_circle = glyph_circles.append(\"circle\")\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i);\r\n                })\r\n                .attr(\"r\", radius - condition.thickness / 2)\r\n                .attr(\"fill\", \"white\")\r\n                .attr('fill-opacity', 1)\r\n                .attr(\"clip-path\", function (d, i) {\r\n                    let id_name = d3.select(this.previousSibling).select(\"clipPath\").attr(\"id\");\r\n                    return \"url(#\" + id_name + \")\";\r\n                });\r\n            return peaGlyph;\r\n        },\r\n        drawStripGlyph(svgs, condition, data, experimentInfo, colorEncoding, glyphClickCallback) {\r\n\r\n            const vc = this\r\n            // glyph的位置设置\r\n            const position = [condition.glyphSize / 2, condition.glyphSize / 2]\r\n            const uniformId = 'stripeGlyph' + '-' + nanoid();\r\n            // 这就是一整个glyph\r\n            const stripeGlyph = svgs.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(data);\r\n            // 内半径\r\n            const innerRadius = vc.radius_scale(condition.iRadius, condition.maxRadius, condition.glyphSize);\r\n            // 每一块区域所占的角度\r\n            const aSector = 360 / data.data.length - condition.sectorInterval;\r\n            // 外半径\r\n            const outerRadius = vc.radius_scale(condition.maxRadius - condition.svgEdgeDis, condition.maxRadius, condition.glyphSize);\r\n            const metaData = {\r\n                inner: innerRadius + condition.outlineThickness / 2,\r\n                outer: outerRadius - condition.outlineThickness / 2,\r\n                start: vc.angle_radian(condition.sectorInterval / 2 - aSector / 2),\r\n                end: vc.angle_radian(condition.sectorInterval / 2 - aSector / 2 + aSector)\r\n            };\r\n\r\n            // 获取所有的隐喻条纹\r\n            const sectorTotalStripe = vc.cal_total_strip(metaData, condition.stripe_L_R, condition.stripe_B_A, condition.stripeProportion, condition.layerNum)\r\n\r\n            // 创建每个区域的分界线\r\n            const divisionG = vc.createDivision(stripeGlyph, uniformId, {\r\n                metaData,\r\n                division_color: condition.divisionColor,\r\n                division_opacity: condition.divisionOpacity,\r\n                a_sector: aSector,\r\n                sector_interval: condition.sectorInterval,\r\n                divisionThickness: condition.outlineThickness\r\n            }, position);\r\n\r\n            // 创建背景\r\n            const backgroundG = vc.createBackground(stripeGlyph, uniformId, {\r\n                metaData,\r\n                encodingColor: colorEncoding,\r\n                bgOpacity: condition.bgOpacity,\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                isEvent: false\r\n            }, position);\r\n\r\n            // 创建内轮廓\r\n            const inline = vc.drawOutline(stripeGlyph, uniformId, {\r\n                name: 'inner',\r\n                radius: innerRadius,\r\n                color: condition.divisionColor,\r\n                thickness: condition.outlineThickness,\r\n                opacity: condition.innerOpacity\r\n            }, position);\r\n            // 创建外轮廓\r\n            const outline = vc.drawOutline(stripeGlyph, uniformId, {\r\n                name: 'outer',\r\n                radius: outerRadius,\r\n                color: condition.divisionColor,\r\n                thickness: condition.outlineThickness,\r\n                opacity: condition.innerOpacity\r\n            }, position);\r\n\r\n            // 创建隐喻条纹\r\n            const metaphor = vc.createMetaphor(stripeGlyph, uniformId, {\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                sectorTotalStripe,\r\n                metaphorColor: condition.metaphorColor,\r\n                metaphorOpacity: condition.metaphorOpacity,\r\n            }, position);\r\n\r\n\r\n            // 创建条纹内容\r\n            const content = vc.createContent(stripeGlyph, uniformId, {\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                stripeNum: condition.stripeNum,\r\n                sectorTotalStripe,\r\n                color: colorEncoding,\r\n                isEncodingInfo: condition.isEncodingInfo,\r\n                encodingInfoColor: condition.encodingInfoColor,\r\n                stripeOpacity: condition.stripeOpacity,\r\n                experimentInfo,\r\n                circleValue: condition.stripeValue\r\n            }, position);\r\n            return stripeGlyph;\r\n        }\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"d73b262b\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + \"3f021ca0\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"glyph_experiment_new:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/glyph_experiment_new/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"239\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkglyph_experiment_new\"] = self[\"webpackChunkglyph_experiment_new\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9300); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","_v","staticStyle","ref","userInfo","model","value","sId","callback","$$v","$set","expression","name","staticClass","gender","age","_n","on","startExperiment","staticRenderFns","mixins","publicFun","data","created","getId","methods","$store","dispatch","$router","push","component","components","userPage","beforeCreate","mainPage","Vue","VueRouter","routes","path","redirect","api","axios","baseURL","timeout","withCredentials","headers","interceptors","request","use","config","err","Promise","reject","response","res","async","getSSIDistributionDataList","isPractice","url","method","getSSISmallDifferDataList","getSSIAccuracyDifferDataList","Vuex","actions","storeUserInfo","context","commit","loadSSIData","requestDataPromise","experimentData","all","then","console","log","message","finally","mutations","StoreUserInfo","state","LoadSSIData","Object","assign","ssiColorEncoding","id","color","nameCh","GlyphDesignData","store","h","App","router","_Notification","_MessageBox","_Message","$mount","storageName","nanoid","randomIndex","length","Math","floor","random","getCurrentTime","date","dayjs","format","curExperiment","type","saveAsJson","experiment","success","e","result","prefix","blob","Blob","JSON","stringify","fileName","saveAs","getDataAttrNum","attr","d","a","filter","item","toolsFun","angle_radian","angle","PI","cal_angle","arc","radius","cal_arc","radian","proportion","arguments","undefined","radius_scale","maxRadius","svgSize","r_s","d3","domain","range","cal_total_strip","meta_data","interval_space","former_space","layer_num","strip_info","outer","inner","strip_thickness","max_arc","end","start","min_arc","max_proportion","real_proportion","min","special_arc","i","num","remain","left_space_radian","real_radian","real_start","j","strip","layer","index","inner_r","outer_r","drawGlyph","peaGlyphCondition","glyphSize","outlineThickness","outlineOffset","circleNum","outlineDis","centerOffset","thickness","circleValue","stripeGlyphCondition","iRadius","sectorInterval","svgEdgeDis","divisionColor","divisionOpacity","bgOpacity","innerOpacity","stripe_L_R","stripe_B_A","stripeProportion","layerNum","metaphorColor","metaphorOpacity","stripeNum","isEncodingInfo","encodingInfoColor","stripeOpacity","stripeValue","computed","encodingColor","experimentInfo","isExperimentB","createSvgOutline","glyphSvg","size","position","width","height","rectComponent","append","createDivision","svgs","condition","uniformId","glyphDivision","selectAll","join","metaData","division_color","divisionThickness","division_opacity","a_sector","sector_interval","createBackground","vc","isEvent","glyphBg","bg_sector","addAngle","aSector","innerRadius","outerRadius","startAngle","endAngle","c","split","drawOutline","opacity","createMetaphor","glyphMetaphor","sectorTotalStripe","createContent","glyphContent","aValue","getValueBaseStripeNum","ceil","slice","ve","parentNode","arcs","radian_scale","tmp_data","drawPeaGlyph","colorEncoding","glyphClickCallback","peaAngle","peaGlyph","datum","peasecod","allPeasecodRight","allPeasecodLeft","glyph_content","newPath","arcRadius","sin","x","cos","y","parent","attr_num","singleAngle","glyph_attr","glyph_circles","values","total","dis","v","style","country","aCircleValue","curData","height_scale","id_name","previousSibling","select","drawStripGlyph","stripeGlyph","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","key","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","removeChild","forEach","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","createStylesheet","fullhref","oldTag","resolve","linkTag","rel","onLinkComplete","errorType","realHref","href","Error","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}