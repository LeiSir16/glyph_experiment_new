{"version":3,"file":"js/app.a0d8fb5d.js","mappings":"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","sources":["webpack://glyph_experiment_new/./src/pages/userPage.vue","webpack://glyph_experiment_new/src/pages/userPage.vue","webpack://glyph_experiment_new/./src/pages/userPage.vue?eabd","webpack://glyph_experiment_new/./src/pages/userPage.vue?555c","webpack://glyph_experiment_new/./src/App.vue","webpack://glyph_experiment_new/src/App.vue","webpack://glyph_experiment_new/./src/App.vue?51dd","webpack://glyph_experiment_new/./src/App.vue?0e40","webpack://glyph_experiment_new/./src/router/index.js","webpack://glyph_experiment_new/./src/api/api.js","webpack://glyph_experiment_new/./src/api/index.js","webpack://glyph_experiment_new/./src/store/index.js","webpack://glyph_experiment_new/./src/main.js","webpack://glyph_experiment_new/./src/mixin.js","webpack://glyph_experiment_new/webpack/bootstrap","webpack://glyph_experiment_new/webpack/runtime/amd options","webpack://glyph_experiment_new/webpack/runtime/chunk loaded","webpack://glyph_experiment_new/webpack/runtime/compat get default export","webpack://glyph_experiment_new/webpack/runtime/define property getters","webpack://glyph_experiment_new/webpack/runtime/ensure chunk","webpack://glyph_experiment_new/webpack/runtime/get javascript chunk filename","webpack://glyph_experiment_new/webpack/runtime/get mini-css chunk filename","webpack://glyph_experiment_new/webpack/runtime/global","webpack://glyph_experiment_new/webpack/runtime/hasOwnProperty shorthand","webpack://glyph_experiment_new/webpack/runtime/load script","webpack://glyph_experiment_new/webpack/runtime/make namespace object","webpack://glyph_experiment_new/webpack/runtime/node module decorator","webpack://glyph_experiment_new/webpack/runtime/publicPath","webpack://glyph_experiment_new/webpack/runtime/css loading","webpack://glyph_experiment_new/webpack/runtime/jsonp chunk loading","webpack://glyph_experiment_new/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-container',[_c('el-header',[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h1',[_vm._v(\"欢迎参加本次实验\")])])],1)],1),_c('el-main',[_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h4',{staticStyle:{\"color\":\"grey\"}},[_vm._v(\"请允许我们收集您的一些个人信息\")])])],1),_c('el-row',{attrs:{\"type\":\"flex\",\"justify\":\"left\",\"align\":\"middle\"}},[_c('el-col',{attrs:{\"span\":7,\"offset\":8}},[_c('el-form',{ref:\"formUser\",attrs:{\"label-position\":\"right\",\"label-width\":\"80px\",\"model\":_vm.userInfo}},[_c('el-form-item',{attrs:{\"label\":\"实验编号\"}},[_c('el-input',{attrs:{\"readonly\":\"\"},model:{value:(_vm.userInfo.sId),callback:function ($$v) {_vm.$set(_vm.userInfo, \"sId\", $$v)},expression:\"userInfo.sId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"姓名\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入您的姓名\",\"clearable\":\"\"},model:{value:(_vm.userInfo.name),callback:function ($$v) {_vm.$set(_vm.userInfo, \"name\", $$v)},expression:\"userInfo.name\"}})],1),_c('el-form-item',{staticClass:\"gender\",attrs:{\"label\":\"性别\"}},[_c('el-radio-group',{model:{value:(_vm.userInfo.gender),callback:function ($$v) {_vm.$set(_vm.userInfo, \"gender\", $$v)},expression:\"userInfo.gender\"}},[_c('el-radio',{attrs:{\"label\":\"男\"}}),_c('el-radio',{attrs:{\"label\":\"女\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"年龄\",\"prop\":\"age\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入您的年龄\",\"clearable\":\"\"},model:{value:(_vm.userInfo.age),callback:function ($$v) {_vm.$set(_vm.userInfo, \"age\", _vm._n($$v))},expression:\"userInfo.age\"}})],1),_c('el-form-item',[_c('el-button',{staticClass:\"begin-experiment\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.startExperiment}},[_vm._v(\"开始实验 \")])],1)],1)],1)],1),_c('el-row',[_c('el-col',{attrs:{\"span\":24}},[_c('h3',{staticStyle:{\"color\":\"red\"}},[_vm._v(\" 请在屏幕1920x1080分辨率，100%缩放的环境下完成实验，实验过程中请勿缩放浏览器 \")])])],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h1>欢迎参加本次实验</h1>\r\n          </el-col>\r\n        </el-row>\r\n      </el-header>\r\n      <el-main>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h4 style=\"color: grey\">请允许我们收集您的一些个人信息</h4>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row type=\"flex\" justify=\"left\" align=\"middle\">\r\n          <el-col :span=\"7\" :offset=\"8\">\r\n            <!--:model校验的时候要保证该字段与信息对象变量名一致-->\r\n            <el-form label-position=\"right\" ref=\"formUser\" label-width=\"80px\" :model=\"userInfo\">\r\n              <el-form-item label=\"实验编号\">\r\n                <el-input v-model=\"userInfo.sId\" readonly></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"姓名\" prop=\"name\">\r\n                <el-input v-model=\"userInfo.name\" placeholder=\"请输入您的姓名\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"性别\" class=\"gender\">\r\n                <el-radio-group v-model=\"userInfo.gender\">\r\n                  <el-radio label=\"男\"></el-radio>\r\n                  <el-radio label=\"女\"></el-radio>\r\n                </el-radio-group>\r\n              </el-form-item>\r\n              <el-form-item label=\"年龄\" prop=\"age\">\r\n                <el-input v-model.number=\"userInfo.age\" placeholder=\"请输入您的年龄\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"startExperiment\" class=\"begin-experiment\">开始实验\r\n                </el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </el-col>\r\n        </el-row>\r\n        <el-row>\r\n          <el-col :span=\"24\">\r\n            <h3 style=\"color: red\">\r\n              请在屏幕1920x1080分辨率，100%缩放的环境下完成实验，实验过程中请勿缩放浏览器\r\n            </h3>\r\n          </el-col>\r\n        </el-row>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {publicFun} from \"@/mixin\";\r\n\r\nexport default {\r\n  name: \"userPage\",\r\n  mixins: [publicFun],\r\n  data() {\r\n    return {\r\n      userInfo: {\r\n        sId: '',\r\n        gender: '男',\r\n        name: '',\r\n        age: 23\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 自动生成唯一编号\r\n    this.$set(this.userInfo, 'sId', this.getId())\r\n  },\r\n  methods: {\r\n    startExperiment() {\r\n      // 将用户相关信息存在vuex中\r\n      this.$store.dispatch('storeUserInfo', this.userInfo)\r\n      this.$router.push({\r\n        name: 'mainPage'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.el-container {\r\n  text-align: center;\r\n\r\n  .gender {\r\n    text-align: left;\r\n  }\r\n\r\n  .begin-experiment {\r\n    width: 100%;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n}\r\n\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userPage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userPage.vue?vue&type=template&id=51ecba27&scoped=true&\"\nimport script from \"./userPage.vue?vue&type=script&lang=js&\"\nexport * from \"./userPage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./userPage.vue?vue&type=style&index=0&id=51ecba27&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"51ecba27\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\n\n<script>\nimport userPage from \"@/pages/userPage.vue\";\n\nexport default {\n  name: 'App',\n  components: {\n    userPage\n  },\n  beforeCreate() {\n    // 加载ssi数据\n    this.$store.dispatch('loadSSIData')\n  },\n  created() {\n\n  }\n}\n</script>\n\n<style>\n*{\n  font-family: \"Gotham Black\";\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=242ef0a2&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=242ef0a2&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\r\nimport VueRouter from \"vue-router\";\r\n\r\n// 路由懒加载\r\nconst userPage = () => import('@/pages/userPage.vue')\r\nconst mainPage = () => import('@/pages/mainPage.vue')\r\nVue.use(VueRouter)\r\nexport default new VueRouter({\r\n    // base: '/glyph_experiment_new/',\r\n    routes: [\r\n        // 当路径为/时重定向到用户信息界面\r\n        {\r\n            path: '/',\r\n            redirect: '/user'\r\n            // redirect: '/main-page'\r\n        },\r\n        {\r\n            name: 'user',\r\n            path: '/user',\r\n            component: userPage\r\n        },\r\n        {\r\n            name: 'mainPage',\r\n            path: '/main-page',\r\n            component: mainPage\r\n        }\r\n    ]\r\n})","// axios的二次封装\r\nimport axios from \"axios\";\r\n\r\n// 创建一个axios实例\r\nconst api = axios.create({\r\n    // 请求地址中公共部分\r\n    // baseURL: 'http://localhost:8080/',\r\n    baseURL: process.env.NODE_ENV === \"production\"\r\n        ? \"https://leisir-note-image.oss-cn-hangzhou.aliyuncs.com/\"\r\n        : \"http://localhost:8080/\",\r\n    // 请求超时时间\r\n    timeout: 5000,\r\n    // 是否可以带凭证，比如cookie或session\r\n    withCredentials: false,\r\n    headers: {'Cache-Control': 'no-cache', \"Content-type\": \"application/json\", 'Access-Control-Allow-Origin': '*'}\r\n})\r\n\r\n/**\r\n * 设置请求拦截器，在发请求之前可以进行一些处理\r\n */\r\napi.interceptors.request.use(config => {\r\n    return config\r\n}, err => {\r\n    // 请求失败\r\n    return Promise.reject(err)\r\n})\r\n/**\r\n * 响应拦截器\r\n */\r\napi.interceptors.response.use(res => {\r\n        return res.data\r\n    }, err => {\r\n        return Promise.reject(err)\r\n    }\r\n)\r\n\r\nexport default api\r\n","import api from \"@/api/api\";\r\n\r\n/**\r\n * 判断分布的实验数据\r\n * @param isPractice    是否是练习数据\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSIDistributionDataList(isPractice) {\r\n    let url = 'distrubution.json'\r\n    if (isPractice) {\r\n        url = 'distrubution_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n/**\r\n * 获取微小差异判断数据\r\n * @param isPractice    是否是练习数据\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSISmallDifferDataList(isPractice) {\r\n    let url = 'small_differ.json'\r\n    if (isPractice) {\r\n        url = 'small_differ_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n/**\r\n * 获取差值实验数据\r\n * @param isPractice\r\n * @return {Promise<axios.AxiosResponse<any>>}\r\n */\r\nexport async function getSSIAccuracyDifferDataList(isPractice) {\r\n    let url = 'acc_differ.json'\r\n    if (isPractice) {\r\n        url = 'acc_differ_practice.json'\r\n    }\r\n    return await api({\r\n        url: `/glyph_experiment_new/${url}`,\r\n        // url: `/${url}`,\r\n        method: 'get'\r\n    })\r\n}","import Vue from \"vue\";\r\nimport Vuex from 'vuex'\r\nimport {getSSIAccuracyDifferDataList, getSSIDistributionDataList, getSSISmallDifferDataList} from \"@/api\";\r\n\r\nVue.use(Vuex)\r\nconst actions = {\r\n    /**\r\n     * 存储用户信息\r\n     * @param context   store上下文\r\n     * @param data  提交的数据\r\n     */\r\n    storeUserInfo(context, data) {\r\n        const userInfo = {\r\n            ...data\r\n        }\r\n        context.commit('StoreUserInfo', userInfo)\r\n    },\r\n    // 发送请求加载ssi数据\r\n    loadSSIData(context) {\r\n        // 分片请求数据\r\n        let requestDataPromise = [\r\n            [getSSIDistributionDataList(true), getSSIDistributionDataList(false)],\r\n            [getSSISmallDifferDataList(true), getSSISmallDifferDataList(false)],\r\n            [getSSIAccuracyDifferDataList(true), getSSIAccuracyDifferDataList(false)]\r\n        ]\r\n        let experimentData = {}\r\n        Promise.all(requestDataPromise[0]).then(res => {\r\n            experimentData['DistributionPractice'] = res[0]\r\n            experimentData['Distribution'] = res[1]\r\n            return Promise.all(requestDataPromise[1])\r\n        }, err => {\r\n            console.log(`分布数据请求失败${err.message}`)\r\n        }).then(res => {\r\n            experimentData['SmallDifferPractice'] = res[0]\r\n            experimentData['SmallDiffer'] = res[1]\r\n            return Promise.all(requestDataPromise[2])\r\n        }, err => {\r\n            console.log(`微小差异数据请求失败${err.message}`)\r\n        }).then(res => {\r\n            experimentData['AccuracyDifferPractice'] = res[0]\r\n            experimentData['AccuracyDiffer'] = res[1]\r\n        }, err => {\r\n            console.log(`差值实验数据请求失败${err.message}`)\r\n        }).finally(() => {\r\n            // 提交给mutations存储数据\r\n            context.commit('LoadSSIData', experimentData)\r\n        })\r\n    }\r\n}\r\nconst mutations = {\r\n    StoreUserInfo(state, data) {\r\n        state.userInfo = data\r\n    },\r\n    LoadSSIData(state, data) {\r\n        // 将data中的数据全都拷贝给state（合并操作）\r\n        Object.assign(state, data)\r\n        console.log(state)\r\n    }\r\n}\r\nconst state = {\r\n    userInfo: {},\r\n    ssiColorEncoding: [\r\n        {\r\n            id: 0,\r\n            name: 'food',\r\n            color: \"#e41a1c\",\r\n            // nameCh: '营养不良指数'\r\n            nameCh: 'Sufficient Food'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'water',\r\n            color: \"#377eb8\",\r\n            // nameCh: '基础供水服务指数'\r\n            nameCh: 'Sufficient Drinking Water'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'safe',\r\n            color: \"#bf66eb\",\r\n            // nameCh: '基础卫生服务指数'\r\n            nameCh: 'Safe Sanitation'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'education',\r\n            color: \"#4daf4a\",\r\n            // nameCh: '教育指数'\r\n            nameCh: 'Education'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'life',\r\n            color: \"#984ea3\",\r\n            // nameCh: '健康生活指数'\r\n            nameCh: 'Healthy Life'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'gender',\r\n            color: \"#ff7f00\",\r\n            // nameCh: '性别平等指数'\r\n            nameCh: 'Gender Equality'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'income',\r\n            color: \"#fdbf6f\",\r\n            // nameCh: '收入分配指数'\r\n            nameCh: 'Income Distribution'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'population',\r\n            color: \"#a65628\",\r\n            // nameCh: '人口增长指数'\r\n            nameCh: 'Population Growth'\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'governance',\r\n            color: \"#f781bf\",\r\n            // nameCh: '政府治理水平指数'\r\n            nameCh: 'Good Governance'\r\n        }\r\n    ],\r\n    ssiColorEncodingDemo: [\r\n        {\r\n            id: 0,\r\n            name: 'food',\r\n            color: \"#e41a1c\",\r\n            nameCh: '营养不良指数'\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'water',\r\n            color: \"#377eb8\",\r\n            nameCh: '基础供水服务指数'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'safe',\r\n            color: \"#bf66eb\",\r\n            nameCh: '基础卫生服务指数'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'education',\r\n            color: \"#4daf4a\",\r\n            nameCh: '教育指数'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'life',\r\n            color: \"#984ea3\",\r\n            nameCh: '健康生活指数'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'gender',\r\n            color: \"#ff7f00\",\r\n            nameCh: '性别平等指数'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'income',\r\n            color: \"#fdbf6f\",\r\n            nameCh: '收入分配指数'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'population',\r\n            color: \"#a65628\",\r\n            nameCh: '人口增长指数'\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'governance',\r\n            color: \"#f781bf\",\r\n            nameCh: '政府治理水平指数'\r\n        },\r\n        {\r\n            id: 9,\r\n            name: 'health',\r\n            color: \"#63daac\",\r\n            nameCh: '健康'\r\n        },\r\n        {\r\n            id: 10,\r\n            name: 'biodiversity',\r\n            color: \"#e9baa5\",\r\n            nameCh: '生态'\r\n        },\r\n        {\r\n            id: 11,\r\n            name: 'renewable',\r\n            color: \"#63daac\",\r\n            nameCh: '清洁能源'\r\n        },\r\n        {\r\n            id: 12,\r\n            name: 'GDP',\r\n            color: \"#63daac\",\r\n            nameCh: '生产总值'\r\n        },\r\n        {\r\n            id: 13,\r\n            name: 'savings',\r\n            color: \"#63daac\",\r\n            nameCh: '节约'\r\n        },\r\n        {\r\n            id: 14,\r\n            name: 'greenhouse',\r\n            color: \"#63daac\",\r\n            nameCh: '绿色房屋'\r\n        }\r\n    ],\r\n    // 可视化介绍部分展示的数据\r\n    GlyphDesignData: {\r\n        \"index\": \"39f41a8d-b7e6-11ed-9002-c403a826ff34\",\r\n        \"originIndex\": \"39eeeac7-b7e6-11ed-a078-c403a826ff34\",\r\n        \"city\": \"Austria\",\r\n        \"average\": 7.233509167974615,\r\n        \"var\": 0.7078247404108701,\r\n        \"std\": 0.8413232080543541,\r\n        \"data\": [\r\n            {\r\n                \"name\": \"food\",\r\n                \"value\": 7.911105549650376\r\n            },\r\n            {\r\n                \"name\": \"water\",\r\n                \"value\": 7.87415577490147\r\n            },\r\n            {\r\n                \"name\": \"safe\",\r\n                \"value\": 7.829557502924567\r\n            },\r\n            {\r\n                \"name\": \"education\",\r\n                \"value\": 7.722513530595052\r\n            },\r\n            {\r\n                \"name\": \"life\",\r\n                \"value\": 7.517247857453378\r\n            },\r\n            {\r\n                \"name\": \"gender\",\r\n                \"value\": 6.129385773669878\r\n            },\r\n            {\r\n                \"name\": \"income\",\r\n                \"value\": 6.843201585267538\r\n            },\r\n            {\r\n                \"name\": \"population\",\r\n                \"value\": 5.466017626675156\r\n            },\r\n            {\r\n                \"name\": \"governance\",\r\n                \"value\": 7.808397310634129\r\n            }\r\n        ]\r\n    }\r\n}\r\nconst store = new Vuex.Store({\r\n    actions,\r\n    mutations,\r\n    state\r\n})\r\nexport default store","import Vue from 'vue'\nimport App from './App.vue'\nimport router from '@/router'\nimport store from '@/store'\nimport {\n    Button,\n    Form,\n    FormItem,\n    Tabs,\n    TabPane,\n    Container,\n    Main,\n    Header,\n    Footer,\n    Col,\n    Row,\n    Input,\n    Radio,\n    RadioGroup,\n    Statistic,\n    ButtonGroup,\n    RadioButton,\n    Notification,\n    MessageBox,\n    Message,\n    InputNumber,\n    Slider,\n    Switch,\n    ColorPicker\n} from \"element-ui\";\n\nVue.config.productionTip = false\nVue.use(Button)\nVue.use(Slider)\nVue.use(ColorPicker)\nVue.use(Switch)\nVue.use(Form)\nVue.use(FormItem)\nVue.use(Container)\nVue.use(Main)\nVue.use(Header)\nVue.use(Footer)\nVue.use(Col)\nVue.use(Row)\nVue.use(Input)\nVue.use(Radio)\nVue.use(RadioGroup)\nVue.use(Tabs)\nVue.use(TabPane)\nVue.use(Statistic)\nVue.use(ButtonGroup)\nVue.use(RadioButton)\nVue.use(InputNumber)\nnew Vue({\n    render: h => h(App),\n    router,\n    store,\n    beforeCreate() {\n        Vue.prototype.$bus = this\n        Vue.prototype.$notify = Notification\n        Vue.prototype.$confirm = MessageBox.confirm\n        Vue.prototype.$message = Message\n\n    }\n}).$mount('#app')\n","import {nanoid} from \"nanoid\";\r\nimport * as d3 from \"d3\";\r\nimport dayjs from \"dayjs\";\r\nimport {saveAs} from 'file-saver'\r\nimport lo from \"vue\";\r\n\r\nexport const publicFun = {\r\n    data() {\r\n        return {\r\n            storageName: 'userInfo'\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * 生成一个唯一的id\r\n         * @return {string} 生成的id\r\n         */\r\n        getId() {\r\n            return nanoid()\r\n        },\r\n        /**\r\n         * 根据给定的数组长度随机选择一个索引\r\n         * @param length    数组的长度\r\n         * @return {number} 随机生成的索引\r\n         */\r\n        randomIndex(length) {\r\n            return Math.floor(Math.random() * length)\r\n        },\r\n        // 获取当前时间\r\n        getCurrentTime() {\r\n            let date = dayjs();\r\n            let format = 'YYYY-MM-DD HH:mm:ss.SSS';\r\n            return date.format(format);\r\n        },\r\n        // 根据type获取实验名称\r\n        curExperiment(type) {\r\n            if (type === 1) {\r\n                return 'Distribution'\r\n            } else if (type === 2) {\r\n                return 'SmallDiffer'\r\n            } else {\r\n                return 'AccuracyDiffer'\r\n            }\r\n        },\r\n        // 数据导出\r\n        saveAsJson(data, experiment, success) {\r\n            // 标明实验\r\n            const e = this.curExperiment(experiment);\r\n            let name = 'noName';\r\n            const userInfo = this.$store.state.userInfo\r\n            if (userInfo) {\r\n                name = userInfo.name;\r\n                const result = {\r\n                    userInfo,\r\n                    [e]: data\r\n                }\r\n                const prefix = userInfo.sId;\r\n                let blob = new Blob([JSON.stringify(result)], {type: \"application/json\"});\r\n                let fileName = prefix + \"_\" + e + \"_\" + name + \".json\";\r\n                saveAs(blob, fileName);\r\n                success();\r\n            }\r\n        },\r\n        /**\r\n         * 获取数据中某个属性的值\r\n         * @param data  一条数据\r\n         * @param attr  属性名\r\n         * @return {*}  属性值\r\n         */\r\n        getDataAttrNum(data, attr) {\r\n            const d = data.data\r\n            const a = d.filter(item => {\r\n                return item.name === attr\r\n            })\r\n            return a[0].value\r\n        }\r\n    }\r\n}\r\n\r\nexport const toolsFun = {\r\n    methods: {\r\n        /**\r\n         * 角度转为弧度\r\n         * @param angle 角度\r\n         * @returns {number}弧度\r\n         */\r\n        angle_radian(angle) {\r\n            return angle * Math.PI / 180;\r\n        },\r\n        /**\r\n         * 基于弧长计算弧度\r\n         * @param arc       弧长\r\n         * @param radius    半径\r\n         * @returns {number}角度\r\n         */\r\n        cal_angle(arc, radius) {\r\n            return (arc / radius);\r\n        },\r\n        /**\r\n         * 计算弧长\r\n         * @param radian        弧度\r\n         * @param radius        半径\r\n         * @param proportion    比例\r\n         * @returns {number}    弧长\r\n         */\r\n        cal_arc(radian, radius, proportion = 1) {\r\n            return (radian * radius * proportion)\r\n        },\r\n        /**\r\n         * 半径比例尺\r\n         * @param radius        半径值0-10\r\n         * @param maxRadius     最大半径\r\n         * @param svgSize       svg尺寸\r\n         * @returns {*}\r\n         */\r\n        radius_scale(radius, maxRadius, svgSize) {\r\n            const r_s = d3.scaleLinear()\r\n                .domain([0, maxRadius])\r\n                .range([0, svgSize / 2]);\r\n            return r_s(radius);\r\n        },\r\n        /**\r\n         * 在某个角度范围随机生成条纹中心角度\r\n         * @param start 开始角度\r\n         * @param end   结束角度\r\n         * @param angle 条纹的角度\r\n         * @return {*}\r\n         */\r\n        randomAngle(start, end, angle) {\r\n            return d3.randomUniform(start + angle / 2, end - angle / 2)()\r\n        },\r\n        /**\r\n         * 获取一个扇形区域所能容纳的所有条纹\r\n         * @param meta_data         扇形区域相关信息\r\n         * @param interval_space    左右间隔比例，0.5表示间隔和条纹大小一致\r\n         * @param former_space      前后间距 0-1 表示占环形区域的比例\r\n         * @param proportion        条纹长度比例，最大弧长的比例\r\n         * @param layer_num         层数\r\n         * @returns {*[]}           所有条纹的数据\r\n         */\r\n        cal_total_strip(meta_data, interval_space, former_space, proportion, layer_num) {\r\n            let strip_info = [];\r\n            const radius_scale = d3.scaleLinear()\r\n                .domain([0, 1])\r\n                .range([0, meta_data.outer - meta_data.inner]);\r\n            // 每一层条纹的宽度\r\n            const strip_thickness = (meta_data.outer - meta_data.inner - radius_scale(former_space) * (layer_num - 1)) / layer_num;\r\n            // 最大弧长\r\n            const max_arc = this.cal_arc(meta_data.end - meta_data.start, meta_data.outer);\r\n            // 最小弧长\r\n            const min_arc = this.cal_arc(meta_data.end - meta_data.start, meta_data.inner);\r\n            // 最大的比例\r\n            const max_proportion = min_arc / max_arc;\r\n            const real_proportion = Math.min(proportion, max_proportion);\r\n            // 指定弧长长度\r\n            const special_arc = real_proportion * max_arc;\r\n            for (let i = 0; i < layer_num; i++) {\r\n                // 条纹中心半径\r\n                let radius = meta_data.inner + strip_thickness / 2 + (strip_thickness + radius_scale(former_space)) * i;\r\n                // 指定弧长和半径下的圆心角弧度\r\n                let radian = this.cal_angle(special_arc, radius);\r\n                // 可容纳数量 一个条纹包括一个显示的条纹和一个不显示的\r\n                let num = Math.floor((meta_data.end - meta_data.start) / (radian * 2))\r\n                let remain = (meta_data.end - meta_data.start) - num * radian * 2;\r\n                // 当interval_space=0.5时显示和不显示条纹的大小一样\r\n                let left_space_radian = radian * 2 * interval_space;\r\n                let real_radian = radian * 2 - left_space_radian;\r\n                let real_start = meta_data.start + remain / 2 + left_space_radian / 2;\r\n                // 判断剩下的区域能否容纳一个条纹\r\n                if (remain >= real_radian) {\r\n                    remain = remain - real_radian;\r\n                    num++;\r\n                    real_start = meta_data.start + remain / 2;\r\n                }\r\n                for (let j = 0; j < num; j++) {\r\n                    let strip = {\r\n                        layer: i,\r\n                        index: j,\r\n                        inner_r: radius - strip_thickness / 2,\r\n                        outer_r: radius + strip_thickness / 2,\r\n                        start: real_start + j * radian * 2,\r\n                        end: real_start + j * radian * 2 + real_radian\r\n                    }\r\n                    strip_info.push(strip);\r\n                }\r\n            }\r\n            return strip_info;\r\n        },\r\n        candidateIsValid(real_thickness, target_space, form_space, candidate, strips) {\r\n            for (let i = 0; i < strips.length; i++) {\r\n                const s = strips[i];\r\n                const is_radius = (Math.abs(s.inner_r - candidate.inner_r) < (real_thickness + form_space));\r\n                const s_center = s.start + s.radian / 2;\r\n                const c_center = candidate.start + candidate.radian / 2;\r\n                const is_radian = Math.abs(s_center - c_center) < (s.radian / 2 + candidate.radian / 2 + target_space);\r\n                if (is_radius && is_radian) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        generatePointsBasedOnPoissonDiskDistributions(meta_data, thickness, interval_space, form_space, proportion, num_samples_before_rejection = 30) {\r\n            const radius_scale = d3.scaleLinear()\r\n                .domain([0, 1])\r\n                .range([0, meta_data.outer - meta_data.inner]);\r\n            const real_thickness = radius_scale(thickness)\r\n            // 前后间隔表示条纹粗细的比例\r\n            const real_form_space = real_thickness * form_space;\r\n            const radius_range = [meta_data.inner + real_thickness / 2, meta_data.outer - real_thickness / 2]\r\n            // 最大弧长\r\n            const max_arc = this.cal_arc(meta_data.end - meta_data.start, radius_range[1]);\r\n            // 最小弧长\r\n            const min_arc = this.cal_arc(meta_data.end - meta_data.start, radius_range[0]);\r\n            // 最大的比例\r\n            const max_proportion = min_arc / max_arc;\r\n            const real_proportion = Math.min(proportion, max_proportion);\r\n            // 指定弧长长度\r\n            const special_arc = real_proportion * max_arc;\r\n            // 随机生成第一个条纹\r\n            const first_radius = d3.randomUniform(radius_range[0], radius_range[1])();\r\n            const first_radian = this.cal_angle(special_arc, first_radius);\r\n            // 对于边界来说不用考虑左右间距\r\n            const first_center = this.randomAngle(meta_data.start, meta_data.end, first_radian);\r\n            const first_strip = {\r\n                index: 0,\r\n                inner_r: first_radius - real_thickness / 2,\r\n                outer_r: first_radius + real_thickness / 2,\r\n                start: first_center - first_radian / 2,\r\n                end: first_center + first_radian / 2,\r\n                radian: first_radian\r\n            }\r\n            const strips = [first_strip];\r\n            const spawn_strips = [first_strip];\r\n            while (spawn_strips.length > 0) {\r\n                const spawn_index = Math.floor(Math.random() * spawn_strips.length);\r\n                const spawn_strip = spawn_strips[spawn_index];\r\n                let candidate_accepted = false;\r\n                for (let i = 0; i < num_samples_before_rejection; i++) {\r\n                    let target_radius = d3.randomUniform(radius_range[0], radius_range[1])();\r\n                    let target_radian = this.cal_angle(special_arc, target_radius);\r\n                    let target_center = this.randomAngle(meta_data.start, meta_data.end, target_radian);\r\n                    // 左右间距表示条纹角度的比例\r\n                    let target_space = target_radian * interval_space;\r\n                    let target_strip = {\r\n                        index: strips.length,\r\n                        inner_r: target_radius - real_thickness / 2,\r\n                        outer_r: target_radius + real_thickness / 2,\r\n                        start: target_center - target_radian / 2,\r\n                        end: target_center + target_radian / 2,\r\n                        radian: target_radian\r\n                    }\r\n                    if (this.candidateIsValid(real_thickness, target_space, real_form_space, target_strip, strips)) {\r\n                        strips.push(target_strip);\r\n                        spawn_strips.push(target_strip);\r\n                        candidate_accepted = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (candidate_accepted === false) {\r\n                    spawn_strips.splice(spawn_index, 1);\r\n                }\r\n            }\r\n            return strips;\r\n        }\r\n    }\r\n}\r\n/**\r\n * 绘制glyph的方法\r\n * @type {{methods: {}}}\r\n */\r\nexport const drawGlyph = {\r\n    data() {\r\n        return {\r\n            peaGlyphCondition: {\r\n                glyphSize: 600,\r\n                outlineThickness: 0.7,\r\n                outlineOffset: 1,\r\n                circleNum: 10,\r\n                outlineDis: 0.5,\r\n                centerOffset: 12,\r\n                thickness: 0.5,\r\n                circleValue: 1\r\n            },\r\n            stripeGlyphCondition: {\r\n                glyphSize: 600,\r\n                iRadius: 2.5,\r\n                maxRadius: 10,\r\n                sectorInterval: 3,\r\n                svgEdgeDis: 0.1,\r\n                outlineThickness: 0.7,\r\n                divisionColor: 'black',\r\n                divisionOpacity: 1,\r\n                bgOpacity: 0,\r\n                innerOpacity: 1,\r\n                stripe_L_R: .1,\r\n                stripe_B_A: .02,\r\n                stripeProportion: .072,\r\n                layerNum: 10,\r\n                metaphorColor: '#C0C0C0',\r\n                metaphorOpacity: .3,\r\n                // 这个值现在传递的是编码的条纹的数量\r\n                stripeNum: 40,\r\n                isEncodingInfo: true,\r\n                encodingInfoColor: 'red',\r\n                stripeOpacity: 1,\r\n                stripeValue: 0.25\r\n            }\r\n        }\r\n    },\r\n    mixins: [toolsFun],\r\n    computed: {\r\n        // 编码的颜色\r\n        encodingColor() {\r\n            if (this.experimentInfo.isExperimentB) {\r\n                return this.$store.state.ssiColorEncoding\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        /**\r\n         * 为glyph创建一个边框\r\n         * @param glyphSvg  要附加到的svg\r\n         * @param id    边框的id\r\n         * @param size  边框的尺寸\r\n         * @param position  边框的位置\r\n         * @returns {*} 绘制的边框\r\n         */\r\n        createSvgOutline(glyphSvg, id, size, position) {\r\n            let thickness = 1\r\n            let width = size - thickness / 2\r\n            let height = size - thickness / 2\r\n            let rectComponent = glyphSvg.append('g')\r\n                .attr('class', id + \"_\" + 'svg_outline')\r\n            let rects = rectComponent.append('rect')\r\n                .attr('x', position[0] - width / 2)\r\n                .attr('y', position[1] - height / 2)\r\n                .attr('width', width)\r\n                .attr('height', height)\r\n                .attr('fill', 'transparent')\r\n                .attr('stroke', 'black')\r\n                .attr('stroke-width', thickness)\r\n                .attr('stroke-opacity', 0)\r\n            return rectComponent\r\n        },\r\n        /**\r\n         * 创建分界线\r\n         * @param svgs          要附加的svg\r\n         * @param id            该svg的唯一id\r\n         * @param condition     控制条件{metaData,division_color,division_opacity,a_sector,sector_interval}\r\n         * @param position      位置信息\r\n         */\r\n        createDivision(svgs, id, condition, position) {\r\n            const uniformId = id + \"_\" + \"glyph_division\";\r\n            const glyphDivision = svgs.append(\"g\")\r\n                .attr(\"class\", uniformId)\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                });\r\n            const division = glyphDivision.selectAll(\"line\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"line\")\r\n                .attr(\"x1\", 0)\r\n                .attr(\"y1\", -condition.metaData.inner)\r\n                .attr(\"x2\", 0)\r\n                .attr(\"y2\", -condition.metaData.outer)\r\n                .attr(\"stroke\", condition.division_color)\r\n                .attr(\"stroke-width\", condition.divisionThickness)\r\n                .attr(\"stroke-opacity\", condition.division_opacity)\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + (-(condition.a_sector) / 2 + i * (condition.a_sector + condition.sector_interval)) + \")\";\r\n                });\r\n            return glyphDivision;\r\n        },\r\n\r\n        /**\r\n         * 创建背景\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一的id\r\n         * @param condition     控制条件{metaData,encodingColor,bgOpacity,aSector,sectorInterval}\r\n         * @param position      位置\r\n         */\r\n        createBackground(svgs, id, condition, position) {\r\n            const vc = this\r\n            let uniformId = id + \"_\" + \"glyph_bg\"\r\n            if (condition.isEvent) {\r\n                uniformId += '_event'\r\n            }\r\n            const glyphBg = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_bg\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\"\r\n                });\r\n            const bg_sector = glyphBg.selectAll(\"path\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    let addAngle = vc.angle_radian(i * (condition.aSector + condition.sectorInterval));\r\n                    // 创建圆环\r\n                    let arc = d3.arc()\r\n                        .innerRadius(condition.metaData.inner)\r\n                        .outerRadius(condition.metaData.outer)\r\n                        .startAngle(condition.metaData.start + addAngle)\r\n                        .endAngle(condition.metaData.end + addAngle);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function (d) {\r\n                    // 筛选出来指定属性的颜色\r\n                    let c = condition.encodingColor.filter((item, index) => {\r\n                        return item.name === d.name.split(' ').join('_');\r\n                    });\r\n                    return c[0].color;\r\n                })\r\n                .attr(\"fill-opacity\", condition.bgOpacity);\r\n            if (condition.isEvent) {\r\n                return bg_sector;\r\n            } else {\r\n                return glyphBg;\r\n            }\r\n        },\r\n        /**\r\n         * 绘制轮廓线\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一id\r\n         * @param condition     控制条件{name,radius,color,thickness,opacity}\r\n         * @param position\r\n         * @returns {*}\r\n         */\r\n        drawOutline(svgs, id, condition, position) {\r\n            return svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + condition.name)\r\n                .append(\"circle\")\r\n                .attr(\"cx\", position[0])\r\n                .attr(\"cy\", position[1])\r\n                .attr(\"r\", condition.radius)\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"fill-opacity\", 0)\r\n                .attr(\"stroke\", condition.color)\r\n                .attr(\"stroke-width\", condition.thickness)\r\n                .attr(\"stroke-opacity\", condition.opacity);\r\n        },\r\n        /**\r\n         *\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector,sectorInterval,sectorTotalStripe,metaphorColor,metaphorOpacity}\r\n         * @param position\r\n         */\r\n        createMetaphor(svgs, id, condition, position) {\r\n            const glyphMetaphor = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_metaphor\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data((d) => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"metaphor\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n            const glyph_metaphor_stripe = glyphMetaphor.selectAll(\"path\")\r\n                .data(condition.sectorTotalStripe)\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d) {\r\n                    let arc = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start)\r\n                        .endAngle(d.end);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    return condition.metaphorColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.metaphorOpacity);\r\n            return glyphMetaphor;\r\n        },\r\n        /**\r\n         *\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector, sectorInterval, stripeNum, sectorTotalStripe, color, isEncodingInfo, encodingInfoColor,stripeOpacity,experimentInfo,circleValue}\r\n         * @param position\r\n         */\r\n        createContent(svgs, id, condition, position) {\r\n            const glyphContent = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_content\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"content\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n            const glyph_content_stripe = glyphContent.selectAll(\"path\")\r\n                .data(function (d) {\r\n                    // encodingValue现在编码的是条纹的数量\r\n                    let aValue = 1\r\n                    if (condition.experimentInfo.isExperimentB) {\r\n                        aValue = condition.circleValue\r\n                    } else {\r\n                        aValue = d[this.getValueBaseStripeNum(condition.stripeNum)]\r\n                    }\r\n                    let num = Math.ceil(d.value / aValue);\r\n                    // console.log(d.name, d.value, d[aValue], num);\r\n                    return condition.sectorTotalStripe.slice(0, num);\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    const ve = d3.select(this.parentNode).data()[0];\r\n                    let aValue = 1\r\n                    if (condition.experimentInfo.isExperimentB) {\r\n                        aValue = condition.circleValue\r\n                    } else {\r\n                        aValue = ve[this.getValueBaseStripeNum(condition.stripeNum)]\r\n                    }\r\n                    const num = Math.floor(ve.value / aValue);\r\n                    const arcs = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start);\r\n                    if (i === num) {\r\n                        let remain = ve.value - num * aValue;\r\n                        let radian_scale = d3.scaleLinear()\r\n                            .domain([0, aValue])\r\n                            .range([d.start, d.end]);\r\n                        arcs.endAngle(radian_scale(remain));\r\n                    } else {\r\n                        arcs.endAngle(d.end);\r\n                    }\r\n                    return arcs();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    let tmp_data = d3.select(this.parentNode).data()[0];\r\n                    // 筛选出来指定属性的颜色\r\n                    let c = condition.color.filter((item, index) => {\r\n                        return item.name === tmp_data.name;\r\n                    });\r\n                    return condition.isEncodingInfo ? c[0].color : condition.encodingInfoColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.stripeOpacity);\r\n            return glyphContent;\r\n        },\r\n        /**\r\n         * 根据当前条纹数量来判断每个stripe编码值的大小\r\n         * @param stripeNum\r\n         * @returns {string}\r\n         */\r\n        getValueBaseStripeNum(stripeNum) {\r\n            let attr = 'value_';\r\n            switch (stripeNum) {\r\n                case 10:\r\n                    attr += 10;\r\n                    break;\r\n                case 20:\r\n                    attr += 20;\r\n                    break;\r\n                case 30:\r\n                    attr += 30;\r\n                    break;\r\n                case 40:\r\n                    attr += 40;\r\n                    break;\r\n            }\r\n            return attr;\r\n        },\r\n        /**\r\n         * 绘制peaglyph\r\n         * @param svgs  要附加到的svg\r\n         * @param condition 控制glyph的一些条件{\r\n         *     glyphSize:glyphSize的尺寸\r\n         *     outlineOffset:边框的的偏移\r\n         *     outlineDis:轮廓距离svg边缘的距离\r\n         *     centerOffset:glyph中心的偏移量\r\n         * }\r\n         * @param data\r\n         * @param experimentInfo{\r\n         *     isExperimentB:true or false\r\n         * }\r\n         * @param colorEncoding 颜色编码策略\r\n         * @param glyphClickCallback    回调函数\r\n         * @return {*}  创建的glyph\r\n         */\r\n        drawPeaGlyph(svgs, condition, data, experimentInfo, colorEncoding, glyphClickCallback) {\r\n            const vc = this\r\n            // glyph的位置设置\r\n            const position = [condition.glyphSize / 2, condition.glyphSize / 2]\r\n            const uniformId = 'peaGlyph' + '-' + nanoid();\r\n            let peaAngle = []\r\n            if (experimentInfo.isExperimentB) {\r\n                peaAngle = [70, 50]\r\n            } else {\r\n                peaAngle = [60, 30]\r\n            }\r\n            const radius = (condition.glyphSize / 2 - condition.outlineOffset - condition.outlineDis - condition.centerOffset) / ((condition.circleNum + 1) * 2) - condition.thickness / 2;\r\n            // 这就是一整个glyph\r\n            let peaGlyph = svgs.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(data);\r\n\r\n            // 创建豌豆荚\r\n            let peasecod = peaGlyph.append('g')\r\n                .attr('class', uniformId + \"_\" + 'peasecod')\r\n            let allPeasecodRight = peasecod.append('g')\r\n                .attr('class', uniformId + \"_\" + 'right')\r\n                .datum(d => {\r\n                    return d;\r\n                })\r\n            let allPeasecodLeft = peasecod.append('g')\r\n                .attr('class', uniformId + \"_\" + 'left')\r\n                .datum(d => {\r\n                    return d;\r\n                })\r\n            let peaArcLeft = allPeasecodLeft.selectAll('path')\r\n                .data((d) => {\r\n                    return d.data;\r\n                })\r\n                .join('path')\r\n                .attr('d', () => {\r\n                    let angle = peaAngle[0];\r\n                    let newPath = d3.path();\r\n                    let startAngle = 180 - angle / 2;\r\n                    let endAngle = startAngle + angle;\r\n                    let arcRadius = condition.glyphSize / 4 / Math.sin(vc.angle_radian(angle / 2));\r\n                    let x = position[0] + Math.cos(vc.angle_radian(angle / 2)) * arcRadius;\r\n                    let y = position[1] - condition.glyphSize / 4;\r\n                    newPath.arc(x, y, arcRadius, vc.angle_radian(startAngle), vc.angle_radian(endAngle), false)\r\n                    return newPath;\r\n                })\r\n                .attr('fill', '#25a924')\r\n                .attr('fill-opacity', .2)\r\n                .attr('transform', function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let singleAngle = (360 / attr_num) * i;\r\n                    return 'rotate(' + singleAngle + \",\" + position[0] + \",\" + position[1] + \")\";\r\n                });\r\n            let peaArcRight = allPeasecodRight.selectAll('path')\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join('path')\r\n                .attr('d', function (d, i) {\r\n                    let angle = peaAngle[1]\r\n                    let newPath = d3.path();\r\n                    let startAngle = 0 - angle / 2;\r\n                    let endAngle = startAngle + angle;\r\n                    let arcRadius = condition.glyphSize / 4 / Math.sin(vc.angle_radian(angle / 2));\r\n                    let x = position[0] - Math.cos(vc.angle_radian(angle / 2)) * arcRadius;\r\n                    let y = position[1] - condition.glyphSize / 4;\r\n                    newPath.arc(x, y, arcRadius, vc.angle_radian(startAngle), vc.angle_radian(endAngle), false)\r\n                    return newPath;\r\n                })\r\n                .attr('fill', '#25a924')\r\n                .attr('fill-opacity', .2)\r\n                .attr('transform', function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let singleAngle = (360 / attr_num) * i;\r\n                    return 'rotate(' + singleAngle + \",\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n\r\n            // 创建外轮廓\r\n            let out_line = peaGlyph.append(\"g\")\r\n                .attr(\"class\", uniformId + 'outline')\r\n                .append(\"circle\")\r\n                .attr(\"cx\", position[0])\r\n                .attr(\"cy\", position[1])\r\n                .attr(\"r\", condition.glyphSize / 2 - condition.outlineOffset)\r\n                .attr(\"fill\", \"red\")\r\n                .attr(\"fill-opacity\", 0)\r\n                .attr(\"stroke\", \"black\")\r\n                .attr('stroke-opacity', .7)\r\n                .attr(\"stroke-width\", condition.outlineThickness);\r\n\r\n            // 只有第二个实验才需要中心点\r\n            // let center = peaGlyph.append(\"g\")\r\n            //     .attr(\"class\", uniformId + 'center')\r\n            //     .append(\"circle\")\r\n            //     .attr(\"cx\", position[0])\r\n            //     .attr(\"cy\", position[1])\r\n            //     .attr(\"r\", 2)\r\n            //     .attr(\"fill\", \"black\")\r\n            //     .attr(\"fill-opacity\", 1);\r\n\r\n            // 绘制glyph的主体内容\r\n            let glyph_content = peaGlyph.append(\"g\")\r\n                .attr(\"class\", uniformId + \"_\" + \"glyph_content\");\r\n\r\n            // 创建每个属性\r\n            let glyph_attr = glyph_content.selectAll(\"g\")\r\n                .data(function (d) {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d, i) {\r\n                    // 类名为属性名之间的空格换为下划线\r\n                    return uniformId + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    let parent = d3.select(this.parentNode).data()[0]\r\n                    let attr_num = parent.data.length;\r\n                    let angle = 360 / attr_num;\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \") rotate(\" + angle * i + \")\";\r\n                });\r\n\r\n            let glyph_circles = glyph_attr.selectAll(\"g\")\r\n                .data(function (d) {\r\n                    // 获取指定数量小球对应的每个小球应该编码的值的大小\r\n                    let circleValue = 0\r\n                    let values = [];\r\n                    if (experimentInfo.isExperimentB) {\r\n                        circleValue = condition.circleValue\r\n                    } else {\r\n                        let attr = vc.getValueBaseStripeNum(condition.circleNum);\r\n                        circleValue = d[attr]\r\n                    }\r\n                    // 属性值小于0表示没有这个属性\r\n                    if (d.value >= 0) {\r\n                        if (d.value >= circleValue) {\r\n                            let total = Math.floor(d.value / circleValue);\r\n                            let remain = d.value - total * circleValue;\r\n                            for (let i = 0; i < condition.circleNum; i++) {\r\n                                if (i < total) {\r\n                                    values.push(circleValue);\r\n                                } else if (i === total) {\r\n                                    values.push(remain);\r\n                                } else {\r\n                                    values.push(0);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            values.push(d.value);\r\n                            for (let i = 1; i < condition.circleNum; i++) {\r\n                                values.push(0);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = 0; i < condition.circleNum; i++) {\r\n                            values.push(-1);\r\n                        }\r\n                    }\r\n                    return values;\r\n                })\r\n                .join(\"g\");\r\n\r\n            // 创建真实显现的circle\r\n            let glyph_real_circle = glyph_circles.append(\"circle\")\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i);\r\n                })\r\n                .attr(\"r\", radius)\r\n                .attr(\"fill\", function (d) {\r\n                    let attr = d3.select(this.parentNode.parentNode).data()[0].name;\r\n                    let v = colorEncoding.filter((item, index) => {\r\n                        return item.name === attr;\r\n                    });\r\n                    return v[0].color;\r\n                })\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"stroke-width\", condition.thickness)\r\n                .style(\"display\", function (d) {\r\n                    // 如果数据为null则不显示这个属性\r\n                    if (d < 0) {\r\n                        return \"none\";\r\n                    }\r\n                    return \"inline\";\r\n                });\r\n\r\n            // 创建遮盖矩形\r\n            let glyph_rect = glyph_circles.append(\"defs\")\r\n                .append(\"clipPath\")\r\n                .attr(\"id\", function (d, i) {\r\n                    let country = d3.select(this.parentNode.parentNode.parentNode.parentNode).data()[0].index;\r\n                    let attr = d3.select(this.parentNode.parentNode.parentNode).data()[0].name;\r\n                    // 使用nanoid生成唯一的id来保证数据相同时，id不同从而保证clip_path不会被互相覆盖\r\n                    return attr + \"_\" + country + \"_\" + i + '_' + nanoid();\r\n                })\r\n                .append(\"rect\")\r\n                .attr(\"x\", -radius + condition.thickness / 2)\r\n                .attr(\"y\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i - radius + condition.thickness / 2);\r\n                    // return 0;\r\n                })\r\n                .attr(\"width\", radius * 2 - condition.thickness)\r\n                .attr(\"height\", function (d) {\r\n                    let aCircleValue = 0\r\n                    // console.log(aCircleValue)\r\n                    if (experimentInfo.isExperimentB) {\r\n                        aCircleValue = condition.circleValue\r\n                    } else {\r\n                        let curData = d3.select(this.parentNode.parentNode.parentNode.parentNode).data()[0]\r\n                        aCircleValue = curData[vc.getValueBaseStripeNum(condition.circleNum)]\r\n                    }\r\n                    let height = radius * 2 - condition.thickness;\r\n                    let height_scale = d3.scaleLinear()\r\n                        .domain([0, aCircleValue])\r\n                        .range([height, 0]);\r\n                    if (d < 0) {\r\n                        return 0;\r\n                    } else {\r\n                        return height_scale(d);\r\n                    }\r\n                });\r\n            let mask_circle = glyph_circles.append(\"circle\")\r\n                .attr(\"cx\", 0)\r\n                .attr(\"cy\", function (d, i) {\r\n                    let dis = (radius + condition.thickness / 2) * 2;\r\n                    return (0 - dis - condition.centerOffset - dis * i);\r\n                })\r\n                .attr(\"r\", radius - condition.thickness / 2)\r\n                .attr(\"fill\", \"white\")\r\n                .attr('fill-opacity', 1)\r\n                .attr(\"clip-path\", function (d, i) {\r\n                    let id_name = d3.select(this.previousSibling).select(\"clipPath\").attr(\"id\");\r\n                    return \"url(#\" + id_name + \")\";\r\n                });\r\n            return peaGlyph;\r\n        },\r\n        drawStripGlyph(svgs, condition, data, experimentInfo, colorEncoding, glyphClickCallback) {\r\n            // console.log(data)\r\n            const vc = this\r\n            // glyph的位置设置\r\n            const position = [condition.glyphSize / 2, condition.glyphSize / 2]\r\n            const uniformId = 'stripeGlyph' + '-' + nanoid();\r\n            // 这就是一整个glyph\r\n            const stripeGlyph = svgs.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(data)\r\n            // 内半径\r\n            const innerRadius = vc.radius_scale(condition.iRadius, condition.maxRadius, condition.glyphSize);\r\n            // 每一块区域所占的角度\r\n            const aSector = 360 / data.data.length - condition.sectorInterval;\r\n            // 外半径\r\n            const outerRadius = vc.radius_scale(condition.maxRadius - condition.svgEdgeDis, condition.maxRadius, condition.glyphSize);\r\n            const metaData = {\r\n                inner: innerRadius + condition.outlineThickness / 2,\r\n                outer: outerRadius - condition.outlineThickness / 2,\r\n                start: vc.angle_radian(condition.sectorInterval / 2 - aSector / 2),\r\n                end: vc.angle_radian(condition.sectorInterval / 2 - aSector / 2 + aSector)\r\n            };\r\n\r\n            // 获取所有的隐喻条纹\r\n            const sectorTotalStripe = vc.cal_total_strip(metaData, condition.stripe_L_R, condition.stripe_B_A, condition.stripeProportion, condition.layerNum)\r\n\r\n            // 创建每个区域的分界线\r\n            const divisionG = vc.createDivision(stripeGlyph, uniformId, {\r\n                metaData,\r\n                division_color: condition.divisionColor,\r\n                division_opacity: condition.divisionOpacity,\r\n                a_sector: aSector,\r\n                sector_interval: condition.sectorInterval,\r\n                divisionThickness: condition.outlineThickness\r\n            }, position);\r\n\r\n            // 创建背景\r\n            const backgroundG = vc.createBackground(stripeGlyph, uniformId, {\r\n                metaData,\r\n                encodingColor: colorEncoding,\r\n                bgOpacity: condition.bgOpacity,\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                isEvent: false\r\n            }, position);\r\n\r\n            // 创建内轮廓\r\n            const inline = vc.drawOutline(stripeGlyph, uniformId, {\r\n                name: 'inner',\r\n                radius: innerRadius,\r\n                color: condition.divisionColor,\r\n                thickness: condition.outlineThickness,\r\n                opacity: condition.innerOpacity\r\n            }, position);\r\n            // 创建外轮廓\r\n            const outline = vc.drawOutline(stripeGlyph, uniformId, {\r\n                name: 'outer',\r\n                radius: outerRadius,\r\n                color: condition.divisionColor,\r\n                thickness: condition.outlineThickness,\r\n                opacity: condition.innerOpacity\r\n            }, position);\r\n\r\n            // 创建隐喻条纹\r\n            const metaphor = vc.createMetaphor(stripeGlyph, uniformId, {\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                sectorTotalStripe,\r\n                metaphorColor: condition.metaphorColor,\r\n                metaphorOpacity: condition.metaphorOpacity,\r\n            }, position);\r\n\r\n\r\n            // 创建条纹内容\r\n            const content = vc.createContent(stripeGlyph, uniformId, {\r\n                aSector,\r\n                sectorInterval: condition.sectorInterval,\r\n                stripeNum: condition.stripeNum,\r\n                sectorTotalStripe,\r\n                color: colorEncoding,\r\n                isEncodingInfo: condition.isEncodingInfo,\r\n                encodingInfoColor: condition.encodingInfoColor,\r\n                stripeOpacity: condition.stripeOpacity,\r\n                experimentInfo,\r\n                circleValue: condition.stripeValue\r\n            }, position);\r\n            return stripeGlyph;\r\n        }\r\n    }\r\n}\r\n\r\nexport const drawStripeGlyphRandom = {\r\n    mixins: [toolsFun],\r\n    data() {\r\n        return {\r\n            // 布局策略：1区域规则布局，2随机分布\r\n            // layoutStrategies: 2,\r\n            // 编码最大值\r\n            maxValue: 10,\r\n            publicGlyphCondition: {\r\n                // svg的大小\r\n                glyphSize: 900,\r\n                // 内半径\r\n                iRadius: 2.5,\r\n                // 默认最大半径\r\n                maxRadius: 10,\r\n                // 扇形区域之间的间隔\r\n                sectorInterval: 1.5,\r\n                // glyph边界离svg的距离\r\n                svgEdgeDis: 0.1,\r\n                // 轮廓粗细\r\n                outlineThickness: 0.7,\r\n                // 区域分割线颜色\r\n                divisionColor: 'black',\r\n                // 区域分割线透明度\r\n                divisionOpacity: 1,\r\n                // 背景透明度\r\n                bgOpacity: 0,\r\n                // 轮廓的透明度\r\n                innerOpacity: 1,\r\n                // 条纹段长度占的比例\r\n                stripeProportion: .083,\r\n                // 条纹左右间距\r\n                stripe_L_R: .15,\r\n                // 条纹前后间距\r\n                stripe_B_A: .07,\r\n                // 隐喻条纹颜色\r\n                metaphorColor: '#C0C0C0',\r\n                // 隐喻条纹透明度\r\n                metaphorOpacity: .3,\r\n                // glyph条纹段是否编码颜色\r\n                isEncodingInfo: true,\r\n                // 编码单一颜色时的颜色\r\n                encodingInfoColor: 'red',\r\n                // 条纹段透明度\r\n                stripeOpacity: 1,\r\n                // 编码属性的数量\r\n                attrNum: 9\r\n            },\r\n            // 区域均匀分布glyph条件\r\n            fixedGlyphCondition: {\r\n                // 分隔的层数\r\n                layerNum: 6,\r\n            },\r\n            randomGlyphCondition: {\r\n                // 条纹段的粗细\r\n                stripeThickness: .07,\r\n                stripeNum: 20\r\n            },\r\n            totalGlyphData: {\r\n                \"index\": \"39f41a8d-b7e6-11ed-9002-c403a826ff34\",\r\n                \"originIndex\": \"39eeeac7-b7e6-11ed-a078-c403a826ff34\",\r\n                \"city\": \"Austria\",\r\n                \"average\": 7.233509167974615,\r\n                \"var\": 0.7078247404108701,\r\n                \"std\": 0.8413232080543541,\r\n                \"data\": [\r\n                    {\r\n                        \"name\": \"food\",\r\n                        \"value\": 10\r\n                    },\r\n                    {\r\n                        \"name\": \"water\",\r\n                        \"value\": 7.87415577490147\r\n                    },\r\n                    {\r\n                        \"name\": \"safe\",\r\n                        \"value\": 5.829557502924567\r\n                    },\r\n                    {\r\n                        \"name\": \"education\",\r\n                        \"value\": 9.722513530595052\r\n                    },\r\n                    {\r\n                        \"name\": \"life\",\r\n                        \"value\": 3.517247857453378\r\n                    },\r\n                    {\r\n                        \"name\": \"gender\",\r\n                        \"value\": 6.129385773669878\r\n                    },\r\n                    {\r\n                        \"name\": \"income\",\r\n                        \"value\": 6.843201585267538\r\n                    },\r\n                    {\r\n                        \"name\": \"population\",\r\n                        \"value\": 5.466017626675156\r\n                    },\r\n                    {\r\n                        \"name\": \"governance\",\r\n                        \"value\": 7.808397310634129\r\n                    },\r\n                    {\r\n                        \"name\": \"health\",\r\n                        \"value\": 6.808397310634129\r\n                    },\r\n                    {\r\n                        \"name\": 'biodiversity',\r\n                        'value': 5.2037809423789705\r\n                    },\r\n                    {\r\n                        \"name\": 'renewable',\r\n                        'value': 3.5905700302124055\r\n                    },\r\n                    {\r\n                        \"name\": 'GDP',\r\n                        'value': 8.618014862326365\r\n                    },\r\n                    {\r\n                        \"name\": 'savings',\r\n                        'value': 9.147414553503802\r\n                    },\r\n                    {\r\n                        \"name\": 'greenhouse',\r\n                        'value': 4.618014862326365\r\n                    }\r\n                ]\r\n            },\r\n            // svg组件\r\n            glyphSvg: '',\r\n            allStripes: []\r\n        }\r\n    },\r\n    methods: {\r\n        // 创建svg\r\n        createSvg() {\r\n            const vc = this\r\n            if (this.glyphSvg) {\r\n                this.glyphSvg.remove()\r\n            }\r\n            this.glyphSvg = d3.select(`#${vc.svgId}`)\r\n                .append('svg')\r\n                .attr('width', vc.publicGlyphCondition.glyphSize)\r\n                .attr('height', vc.publicGlyphCondition.glyphSize)\r\n        },\r\n        /**\r\n         * 绘制轮廓线\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一id\r\n         * @param condition     控制条件{name,radius,color,thickness,opacity}\r\n         * @param position\r\n         * @returns {*}\r\n         */\r\n        drawOutline(svgs, id, condition, position) {\r\n            return svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + condition.name)\r\n                .append(\"circle\")\r\n                .attr(\"cx\", position[0])\r\n                .attr(\"cy\", position[1])\r\n                .attr(\"r\", condition.radius)\r\n                .attr(\"fill\", \"white\")\r\n                .attr(\"fill-opacity\", 0)\r\n                .attr(\"stroke\", condition.color)\r\n                .attr(\"stroke-width\", condition.thickness)\r\n                .attr(\"stroke-opacity\", condition.opacity);\r\n        },\r\n        /**\r\n         * 创建分界线\r\n         * @param svgs          要附加的svg\r\n         * @param id            该svg的唯一id\r\n         * @param condition     控制条件{metaData,division_color,division_opacity,a_sector,sector_interval}\r\n         * @param position      位置信息\r\n         */\r\n        createDivision(svgs, id, condition, position) {\r\n            const uniformId = id + \"_\" + \"glyph_division\";\r\n            const glyphDivision = svgs.append(\"g\")\r\n                .attr(\"class\", uniformId)\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                });\r\n            const division = glyphDivision.selectAll(\"line\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"line\")\r\n                .attr(\"x1\", 0)\r\n                .attr(\"y1\", -condition.metaData.inner)\r\n                .attr(\"x2\", 0)\r\n                .attr(\"y2\", -condition.metaData.outer)\r\n                .attr(\"stroke\", condition.division_color)\r\n                .attr(\"stroke-width\", condition.divisionThickness)\r\n                .attr(\"stroke-opacity\", condition.division_opacity)\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + (-(condition.a_sector) / 2 + i * (condition.a_sector + condition.sector_interval)) + \")\";\r\n                });\r\n            return glyphDivision;\r\n        },\r\n        /**\r\n         * 创建背景\r\n         * @param svgs          要附加的元素\r\n         * @param id            唯一的id\r\n         * @param condition     控制条件{metaData,encodingColor,bgOpacity,aSector,sectorInterval}\r\n         * @param position      位置\r\n         */\r\n        createBackground(svgs, id, condition, position) {\r\n            const vc = this\r\n            const uniformId = id + \"_\" + \"glyph_bg\"\r\n            const glyphBg = svgs.append(\"g\")\r\n                .attr(\"class\", uniformId)\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\"\r\n                });\r\n\r\n            const bg_sector = glyphBg.selectAll(\"path\")\r\n                .data(d => {\r\n                    // console.log(d)\r\n                    return d.data\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    const addAngle = vc.angle_radian(i * (condition.aSector + condition.sectorInterval));\r\n                    // 创建圆环\r\n                    const arc = d3.arc()\r\n                        .innerRadius(condition.metaData.inner)\r\n                        .outerRadius(condition.metaData.outer)\r\n                        .startAngle(condition.metaData.start + addAngle)\r\n                        .endAngle(condition.metaData.end + addAngle);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function (d) {\r\n                    // 筛选出来指定属性的颜色\r\n                    const c = condition.encodingColor.filter((item, index) => {\r\n                        return item.name === d.name;\r\n                    })\r\n                    return c[0].color\r\n                })\r\n                .attr(\"fill-opacity\", condition.bgOpacity)\r\n            return glyphBg\r\n        },\r\n        /**\r\n         *  创建隐喻条纹\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector,sectorInterval,sectorTotalStripe,metaphorColor,metaphorOpacity}\r\n         * @param position\r\n         */\r\n        createMetaphor(svgs, id, condition, position) {\r\n            const glyphMetaphor = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_metaphor\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data((d) => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"metaphor\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n            const glyph_metaphor_stripe = glyphMetaphor.selectAll(\"path\")\r\n                .data(condition.sectorTotalStripe)\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d) {\r\n                    let arc = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start)\r\n                        .endAngle(d.end);\r\n                    return arc();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    return condition.metaphorColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.metaphorOpacity);\r\n            return glyphMetaphor;\r\n        },\r\n        /**\r\n         *\r\n         * @param svgs\r\n         * @param id\r\n         * @param condition     控制条件{aSector, sectorInterval, stripeNum, sectorTotalStripe, color, isEncodingInfo, encodingInfoColor,stripeOpacity,experimentInfo,circleValue}\r\n         * @param position\r\n         */\r\n        createContent(svgs, id, condition, position) {\r\n            const glyphContent = svgs.append(\"g\")\r\n                .attr(\"class\", id + \"_\" + \"glyph_content\")\r\n                .attr(\"transform\", function () {\r\n                    return \"translate(\" + position[0] + \",\" + position[1] + \")\";\r\n                })\r\n                .selectAll(\"g\")\r\n                .data(d => {\r\n                    return d.data;\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return \"content\" + \"_\" + id + \"_\" + d.name;\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\";\r\n                });\r\n\r\n            const glyph_content_stripe = glyphContent.selectAll(\"path\")\r\n                .data(function (d) {\r\n                    // 每个条纹编码的大小\r\n                    const aValue = condition.circleValue\r\n                    const num = Math.ceil(d.value / aValue);\r\n                    return condition.sectorTotalStripe.slice(0, num);\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    const ve = d3.select(this.parentNode).data()[0];\r\n                    const aValue = condition.circleValue\r\n                    const num = Math.floor(ve.value / aValue);\r\n                    const arcs = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start);\r\n                    if (i === num) {\r\n                        let remain = ve.value - num * aValue;\r\n                        let radian_scale = d3.scaleLinear()\r\n                            .domain([0, aValue])\r\n                            .range([d.start, d.end]);\r\n                        arcs.endAngle(radian_scale(remain));\r\n                    } else {\r\n                        arcs.endAngle(d.end);\r\n                    }\r\n                    return arcs();\r\n                })\r\n                .attr(\"fill\", function () {\r\n                    let tmp_data = d3.select(this.parentNode).data()[0];\r\n                    // 筛选出来指定属性的颜色\r\n                    let c = condition.color.filter((item, index) => {\r\n                        return item.name === tmp_data.name;\r\n                    });\r\n                    return condition.isEncodingInfo ? c[0].color : condition.encodingInfoColor;\r\n                })\r\n                .attr(\"fill-opacity\", condition.stripeOpacity);\r\n            return glyphContent;\r\n        },\r\n        /**\r\n         *\r\n         * @param drawSvg\r\n         * @param uniformId\r\n         * @param condition {aSector, sectorInterval, circleValue, sectorTotalStripe, color, metaphorColor, isEncodingInfo, encodingInfoColor, metaphorOpacity, stripeOpacity}\r\n         * @param position\r\n         */\r\n        createRandomContent(drawSvg, uniformId, condition, position) {\r\n            const vc = this;\r\n            const glyphRandom = drawSvg.append(\"g\")\r\n                .attr(\"class\", `${uniformId}_glyph_content`)\r\n                .attr(\"transform\", function () {\r\n                    return `translate(${position[0]},${position[1]})`\r\n                })\r\n                .selectAll(\"g\")\r\n                .data(d => {\r\n                    return d.data\r\n                })\r\n                .join(\"g\")\r\n                .attr(\"class\", function (d) {\r\n                    return `content_${uniformId}_${d.name}`\r\n                })\r\n                .attr(\"transform\", function (d, i) {\r\n                    return \"rotate(\" + i * (condition.aSector + condition.sectorInterval) + \")\"\r\n                });\r\n\r\n            const glyphRandomStripe = glyphRandom.selectAll(\"path\")\r\n                .data(d => {\r\n                    const aValue = condition.circleValue\r\n                    const num = Math.ceil(d.value / aValue)\r\n                    // 深拷贝\r\n                    let stripes = condition.sectorTotalStripe.slice(0, num)\r\n                    if (d.value !== 0 && d.value % aValue !== 0) {\r\n                        stripes = [stripes[0], ...stripes]\r\n                    }\r\n                    return stripes\r\n                })\r\n                .join(\"path\")\r\n                .attr(\"d\", function (d, i) {\r\n                    const ve = d3.select(this.parentNode).data()[0]\r\n                    const aValue = condition.circleValue\r\n                    const num = Math.floor(ve.value / aValue)\r\n                    const arcs = d3.arc()\r\n                        .innerRadius(d.inner_r)\r\n                        .outerRadius(d.outer_r)\r\n                        .startAngle(d.start)\r\n                    if (i === 1) {\r\n                        // 带有颜色的是不完整的条纹\r\n                        const remain = ve.value - num * aValue;\r\n                        const radian_scale = d3.scaleLinear()\r\n                            .domain([0, aValue])\r\n                            .range([d.start, d.end])\r\n                        arcs.endAngle(radian_scale(remain))\r\n                    } else {\r\n                        arcs.endAngle(d.end)\r\n                    }\r\n                    return arcs()\r\n                })\r\n                .attr(\"fill\", function (d, i) {\r\n                    const tmp_data = d3.select(this.parentNode).data()[0];\r\n                    const ve = tmp_data.value;\r\n                    const num = Math.floor(ve / condition.circleValue);\r\n                    const c = condition.color.filter((item, index) => {\r\n                        return item.name === tmp_data.name;\r\n                    });\r\n                    if (num * condition.circleValue < ve) {\r\n                        if (i === 0) {\r\n                            // 用于隐喻条纹\r\n                            return condition.metaphorColor;\r\n                        }\r\n                        return condition.isEncodingInfo ? c[0].color : condition.encodingInfoColor;\r\n                    }\r\n                    return condition.isEncodingInfo ? c[0].color : condition.encodingInfoColor;\r\n                })\r\n                .attr(\"fill-opacity\", function (d, i) {\r\n                    const tmp_data = d3.select(this.parentNode).data()[0];\r\n                    const ve = tmp_data.value;\r\n                    const num = Math.floor(ve / condition.circleValue);\r\n                    if (num * condition.circleValue < ve) {\r\n                        if (i === 0) {\r\n                            // 用于隐喻条纹\r\n                            return condition.metaphorOpacity;\r\n                        }\r\n                        return condition.stripeOpacity;\r\n                    }\r\n                    return condition.stripeOpacity;\r\n                })\r\n                .attr(\"class\", function (d, i) {\r\n                    const tmp_data = d3.select(this.parentNode).data()[0];\r\n                    const ve = tmp_data.value;\r\n                    const num = Math.floor(ve / condition.circleValue);\r\n                    if (num * condition.circleValue < ve) {\r\n                        if (i === 0) {\r\n                            // 用于隐喻条纹\r\n                            return \"path_metaphor\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                })\r\n            return glyphRandom\r\n        },\r\n        /**\r\n         * 创建两种glyph的公共组成部分\r\n         * @param appendSvg 要附加的glyph\r\n         * @param uniformId id\r\n         */\r\n        createPublicComponent(appendSvg, uniformId) {\r\n            const vc = this\r\n            // 创建内轮廓\r\n            vc.drawOutline(appendSvg, uniformId, {\r\n                name: 'inner',\r\n                radius: vc.innerRadius,\r\n                color: vc.publicGlyphCondition.divisionColor,\r\n                thickness: vc.publicGlyphCondition.outlineThickness,\r\n                opacity: vc.publicGlyphCondition.innerOpacity\r\n            }, vc.glyphPosition);\r\n            // 创建外轮廓\r\n            vc.drawOutline(appendSvg, uniformId, {\r\n                name: 'outer',\r\n                radius: vc.outerRadius,\r\n                color: vc.publicGlyphCondition.divisionColor,\r\n                thickness: vc.publicGlyphCondition.outlineThickness,\r\n                opacity: vc.publicGlyphCondition.innerOpacity\r\n            }, vc.glyphPosition);\r\n            // 创建每个区域的分界线\r\n            vc.createDivision(appendSvg, uniformId, {\r\n                metaData: vc.metaData,\r\n                division_color: vc.publicGlyphCondition.divisionColor,\r\n                division_opacity: vc.publicGlyphCondition.divisionOpacity,\r\n                a_sector: vc.aSector,\r\n                sector_interval: vc.publicGlyphCondition.sectorInterval,\r\n                divisionThickness: vc.publicGlyphCondition.outlineThickness\r\n            }, vc.glyphPosition);\r\n            // 创建背景\r\n            vc.createBackground(appendSvg, uniformId, {\r\n                metaData: vc.metaData,\r\n                encodingColor: vc.colorEncoding,\r\n                bgOpacity: vc.publicGlyphCondition.bgOpacity,\r\n                aSector: vc.aSector,\r\n                sectorInterval: vc.publicGlyphCondition.sectorInterval\r\n            }, vc.glyphPosition);\r\n\r\n        },\r\n        // 创建规则分布的glyph\r\n        createFixedGlyph() {\r\n            const vc = this\r\n            const uniformId = `fixed-${nanoid()}`\r\n            const stripeG = this.glyphSvg.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(vc.glyphData);\r\n            // 创建组成的公共部分\r\n            this.createPublicComponent(stripeG, uniformId)\r\n            // 创建隐喻条纹\r\n            this.createMetaphor(stripeG, uniformId, {\r\n                aSector: vc.aSector,\r\n                sectorInterval: vc.publicGlyphCondition.sectorInterval,\r\n                sectorTotalStripe: vc.fixedSectorTotalStripe,\r\n                metaphorColor: vc.publicGlyphCondition.metaphorColor,\r\n                metaphorOpacity: vc.publicGlyphCondition.metaphorOpacity,\r\n            }, vc.glyphPosition)\r\n            // 创建填充条纹\r\n            this.createContent(stripeG, uniformId, {\r\n                aSector: vc.aSector,\r\n                sectorInterval: vc.publicGlyphCondition.sectorInterval,\r\n                sectorTotalStripe: vc.fixedSectorTotalStripe,\r\n                color: vc.colorEncoding,\r\n                isEncodingInfo: vc.publicGlyphCondition.isEncodingInfo,\r\n                encodingInfoColor: vc.publicGlyphCondition.encodingInfoColor,\r\n                stripeOpacity: vc.publicGlyphCondition.stripeOpacity,\r\n                circleValue: vc.stripeValue\r\n            }, vc.glyphPosition);\r\n        },\r\n        // 创建随机分布的glyph\r\n        createRandomGlyph() {\r\n            const vc = this\r\n            const uniformId = `random-${nanoid()}`\r\n            const stripeG = this.glyphSvg.append('g')\r\n                .attr('class', uniformId)\r\n                .datum(vc.glyphData);\r\n            // 创建组成的公共部分\r\n            this.createPublicComponent(stripeG, uniformId)\r\n            this.createRandomContent(stripeG, uniformId, {\r\n                aSector: vc.aSector,\r\n                sectorInterval: vc.publicGlyphCondition.sectorInterval,\r\n                sectorTotalStripe: vc.randomSectorTotalStripe,\r\n                color: vc.colorEncoding,\r\n                metaphorColor: vc.publicGlyphCondition.metaphorColor,\r\n                metaphorOpacity: vc.publicGlyphCondition.metaphorOpacity,\r\n                isEncodingInfo: vc.publicGlyphCondition.isEncodingInfo,\r\n                encodingInfoColor: vc.publicGlyphCondition.encodingInfoColor,\r\n                stripeOpacity: vc.publicGlyphCondition.stripeOpacity,\r\n                circleValue: vc.stripeValue\r\n            }, vc.glyphPosition)\r\n        }\r\n    },\r\n    computed: {\r\n        // 设置svg的id\r\n        svgId() {\r\n            const pre = this.layoutStrategies === 1 ? \"fixed\" : \"random\"\r\n            return `${pre}_${nanoid()}`\r\n        },\r\n        glyphPosition() {\r\n            return [this.publicGlyphCondition.glyphSize / 2, this.publicGlyphCondition.glyphSize / 2]\r\n        },\r\n        // 每一个区域所占的角度\r\n        aSector() {\r\n            return 360 / this.glyphData.data.length - this.publicGlyphCondition.sectorInterval\r\n        },\r\n        // 内轮廓半径\r\n        innerRadius() {\r\n            return this.radius_scale(this.publicGlyphCondition.iRadius, this.publicGlyphCondition.maxRadius, this.publicGlyphCondition.glyphSize)\r\n        },\r\n        // 外轮廓半径\r\n        outerRadius() {\r\n            // 外轮廓半径会距离svg边界有svgEdgeDis距离\r\n            return this.radius_scale(this.publicGlyphCondition.maxRadius - this.publicGlyphCondition.svgEdgeDis, this.publicGlyphCondition.maxRadius, this.publicGlyphCondition.glyphSize)\r\n        },\r\n        // 计算一些元数据\r\n        metaData() {\r\n            return {\r\n                inner: this.innerRadius + this.publicGlyphCondition.outlineThickness / 2,\r\n                outer: this.outerRadius - this.publicGlyphCondition.outlineThickness / 2,\r\n                start: this.angle_radian(this.publicGlyphCondition.sectorInterval / 2 - this.aSector / 2),\r\n                end: this.angle_radian(this.publicGlyphCondition.sectorInterval / 2 - this.aSector / 2 + this.aSector)\r\n            }\r\n        },\r\n        // 条纹段在区域内均匀分布时所有的条纹段\r\n        fixedSectorTotalStripe() {\r\n            return this.cal_total_strip(this.metaData, this.publicGlyphCondition.stripe_L_R, this.publicGlyphCondition.stripe_B_A, this.publicGlyphCondition.stripeProportion, this.fixedGlyphCondition.layerNum)\r\n        },\r\n        // 条纹段在区域内随机分布时所有的条纹段\r\n        randomSectorTotalStripe() {\r\n            this.allStripes = this.generatePointsBasedOnPoissonDiskDistributions(this.metaData, this.randomGlyphCondition.stripeThickness, this.publicGlyphCondition.stripe_L_R, this.publicGlyphCondition.stripe_B_A, this.publicGlyphCondition.stripeProportion)\r\n            const tmp = [...this.allStripes]\r\n            // 根据条件显示指定数量的条纹段\r\n            if (tmp.length >= this.randomGlyphCondition.stripeNum) {\r\n                return tmp.slice(0, this.randomGlyphCondition.stripeNum)\r\n            } else {\r\n                return tmp\r\n            }\r\n        },\r\n        // 每个条纹段编码的值的大小\r\n        stripeValue() {\r\n            if (this.layoutStrategies === 1) {\r\n                return this.maxValue / this.fixedSectorTotalStripe.length\r\n            } else {\r\n                return this.maxValue / this.randomSectorTotalStripe.length\r\n            }\r\n        },\r\n        colorEncoding() {\r\n            const colors = this.$store.state.ssiColorEncodingDemo\r\n            const num = Math.min(this.publicGlyphCondition.attrNum, colors.length)\r\n            return [...colors.slice(0, num)]\r\n        },\r\n        glyphData() {\r\n            const d = this.totalGlyphData.data\r\n            const num = Math.min(this.publicGlyphCondition.attrNum, d.length)\r\n            return {\r\n                ...this.totalGlyphData,\r\n                data: [...d.slice(0, num)]\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        allStripes: {\r\n            deep: true,\r\n            handler(newVal, oldVal) {\r\n                this.$bus.$emit('updateStripeNum', newVal)\r\n            }\r\n        }\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"c33631c9\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + \"0626cd1e\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"glyph_experiment_new:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/glyph_experiment_new/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"898\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkglyph_experiment_new\"] = self[\"webpackChunkglyph_experiment_new\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(7311); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","attrs","_v","staticStyle","ref","userInfo","model","value","sId","callback","$$v","$set","expression","name","staticClass","gender","age","_n","on","startExperiment","staticRenderFns","mixins","publicFun","data","created","getId","methods","$store","dispatch","$router","push","component","components","userPage","beforeCreate","mainPage","Vue","VueRouter","routes","path","redirect","api","axios","baseURL","timeout","withCredentials","headers","interceptors","request","use","config","err","Promise","reject","response","res","async","getSSIDistributionDataList","isPractice","url","method","getSSISmallDifferDataList","getSSIAccuracyDifferDataList","Vuex","actions","storeUserInfo","context","commit","loadSSIData","requestDataPromise","experimentData","all","then","console","log","message","finally","mutations","StoreUserInfo","state","LoadSSIData","Object","assign","ssiColorEncoding","id","color","nameCh","ssiColorEncodingDemo","GlyphDesignData","store","h","App","router","_Notification","_MessageBox","_Message","$mount","storageName","nanoid","randomIndex","length","Math","floor","random","getCurrentTime","date","dayjs","format","curExperiment","type","saveAsJson","experiment","success","e","result","prefix","blob","Blob","JSON","stringify","fileName","saveAs","getDataAttrNum","attr","d","a","filter","item","toolsFun","angle_radian","angle","PI","cal_angle","arc","radius","cal_arc","radian","proportion","arguments","undefined","radius_scale","maxRadius","svgSize","r_s","d3","domain","range","randomAngle","start","end","cal_total_strip","meta_data","interval_space","former_space","layer_num","strip_info","outer","inner","strip_thickness","max_arc","min_arc","max_proportion","real_proportion","min","special_arc","i","num","remain","left_space_radian","real_radian","real_start","j","strip","layer","index","inner_r","outer_r","candidateIsValid","real_thickness","target_space","form_space","candidate","strips","s","is_radius","abs","s_center","c_center","is_radian","generatePointsBasedOnPoissonDiskDistributions","thickness","num_samples_before_rejection","real_form_space","radius_range","first_radius","first_radian","first_center","first_strip","spawn_strips","spawn_index","candidate_accepted","target_radius","target_radian","target_center","target_strip","splice","drawGlyph","peaGlyphCondition","glyphSize","outlineThickness","outlineOffset","circleNum","outlineDis","centerOffset","circleValue","stripeGlyphCondition","iRadius","sectorInterval","svgEdgeDis","divisionColor","divisionOpacity","bgOpacity","innerOpacity","stripe_L_R","stripe_B_A","stripeProportion","layerNum","metaphorColor","metaphorOpacity","stripeNum","isEncodingInfo","encodingInfoColor","stripeOpacity","stripeValue","computed","encodingColor","experimentInfo","isExperimentB","createSvgOutline","glyphSvg","size","position","width","height","rectComponent","append","createDivision","svgs","condition","uniformId","glyphDivision","selectAll","join","metaData","division_color","divisionThickness","division_opacity","a_sector","sector_interval","createBackground","vc","isEvent","glyphBg","bg_sector","addAngle","aSector","innerRadius","outerRadius","startAngle","endAngle","c","split","drawOutline","opacity","createMetaphor","glyphMetaphor","sectorTotalStripe","createContent","glyphContent","aValue","getValueBaseStripeNum","ceil","slice","ve","parentNode","arcs","radian_scale","tmp_data","drawPeaGlyph","colorEncoding","glyphClickCallback","peaAngle","peaGlyph","datum","peasecod","allPeasecodRight","allPeasecodLeft","glyph_content","newPath","arcRadius","sin","x","cos","y","parent","attr_num","singleAngle","glyph_attr","glyph_circles","values","total","dis","v","style","country","aCircleValue","curData","height_scale","id_name","previousSibling","select","drawStripGlyph","stripeGlyph","drawStripeGlyphRandom","maxValue","publicGlyphCondition","attrNum","fixedGlyphCondition","randomGlyphCondition","stripeThickness","totalGlyphData","allStripes","createSvg","remove","svgId","createRandomContent","drawSvg","glyphRandom","stripes","createPublicComponent","appendSvg","glyphPosition","createFixedGlyph","stripeG","glyphData","fixedSectorTotalStripe","createRandomGlyph","randomSectorTotalStripe","pre","layoutStrategies","tmp","colors","watch","deep","handler","newVal","oldVal","$bus","$emit","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","every","key","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","removeChild","forEach","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","createStylesheet","fullhref","oldTag","resolve","linkTag","rel","onLinkComplete","errorType","realHref","href","Error","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","error","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}